package cloudsim.gui;

import java.awt.Dimension;
import java.awt.Toolkit;
import java.awt.event.KeyEvent;
import javax.swing.JFileChooser;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.mail.internet.AddressException;
import javax.mail.internet.InternetAddress;
import javax.swing.table.DefaultTableModel;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.sql.DatabaseMetaData;
import java.util.ArrayList;
import java.util.Random;
import java.util.StringTokenizer;
import java.util.regex.Pattern;
import java.util.UUID;
import javax.mail.FetchProfile.Item;
import javax.swing.filechooser.FileFilter;
import javax.swing.filechooser.FileNameExtensionFilter;
import org.cloudbus.cloudsim.ParameterException;

public class Main_Frame extends javax.swing.JFrame {

    String host = "jdbc:derby://localhost:1527/cloudsimDB";
    String uName = "root";
    String uPass = "root";
    String loggedIn;
    String link="";
    String loggedCtry;
    String uploadFile;
    String loggedPass;
    String Compliantcountries="";
    File openFile;
    String token="";
    File saveFile; 
    int addFlag=0;
    static ComplianceGraph CL=new ComplianceGraph();
    int counter=0;
    double maxTransferTime;
    public Main_Frame() {
        //this.setUndecorated(true);
        //this.setAlwaysOnTop(true);
        this.setResizable(false);
        this.setVisible(true);
        initComponents();
        Toolkit tk = Toolkit.getDefaultToolkit();
        Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();
        this.setLocation(dim.width / 2 - this.getSize().width / 2, dim.height / 2 - this.getSize().height / 2);
        /*
        String[] Datacenter={"NorthCentralUS","SouthCentralUS","NorthEurope","WestEurope","CentralIndia","SouthIndia","WestIndia","EastAsia"};
        for(String dc:Datacenter){
            try {
                Connection con = DriverManager.getConnection(host, uName, uPass);
                DatabaseMetaData dbmd = con.getMetaData();
                    ResultSet rs = dbmd.getTables(null, "ROOT", dc, null);
                    if(rs.next())
                    {
                        //do nothing
                    }
                    else{
                        createMyTable(dc);
                    }
                    con.close();
                
            } catch (SQLException ex) {
                Logger.getLogger(Main_Frame.class.getName()).log(Level.SEVERE, null, ex);
            }
        }*/
    }
    public void createMyTable(String val){
        try {
                Connection con = DriverManager.getConnection(host, uName, uPass);
                Statement stmt = con.createStatement();
                String SQL = "create table " +val+" (FILENAME VARCHAR(100) not null primary key,FILEOBJECT BLOB(2147483647) not null)";
                stmt.execute(SQL);
                Statement stmt1 = con.createStatement();
                String SQL1 = "alter table " +val+" add foreign key (FILENAME) references CLOUDFILE(FILENAME) on delete cascade";
                stmt1.execute(SQL1);
                con.close();

            } catch (SQLException ex) {
                Logger.getLogger(Main_Frame.class.getName()).log(Level.SEVERE, null, ex);
            }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        transferPanel = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        mainCombo = new javax.swing.JComboBox();
        repliCombo = new javax.swing.JComboBox();
        ParentPanel = new javax.swing.JPanel();
        ConstantPanel = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        VariablePanel = new javax.swing.JPanel();
        LoginPanel = new javax.swing.JPanel();
        username_txt = new javax.swing.JTextField();
        password_txt = new javax.swing.JPasswordField();
        login_btn = new javax.swing.JButton();
        reset_btn = new javax.swing.JButton();
        register_btn = new javax.swing.JButton();
        forgot_lbl = new javax.swing.JLabel();
        AdminPanel = new javax.swing.JPanel();
        User_Country = new javax.swing.JPanel();
        mng_user = new javax.swing.JButton();
        mng_cntry = new javax.swing.JButton();
        logout_admin = new javax.swing.JButton();
        transfer_admin = new javax.swing.JButton();
        Mng_userPanel = new javax.swing.JPanel();
        adduser_btn = new javax.swing.JButton();
        view_btn = new javax.swing.JButton();
        back_btn = new javax.swing.JButton();
        UserInfoTable = new javax.swing.JScrollPane();
        UserTable = new javax.swing.JTable();
        info_lbl = new javax.swing.JLabel();
        rmvuser_btn = new javax.swing.JButton();
        user_sel = new javax.swing.JComboBox();
        Mng_cntryPanel = new javax.swing.JPanel();
        info_lbl1 = new javax.swing.JLabel();
        CntryInfoTable = new javax.swing.JScrollPane();
        CntryTable = new javax.swing.JTable();
        addcntry_btn = new javax.swing.JButton();
        rmvcntry_btn = new javax.swing.JButton();
        view_btn1 = new javax.swing.JButton();
        back_btn1 = new javax.swing.JButton();
        country_sel = new javax.swing.JComboBox();
        Add_userPanel = new javax.swing.JPanel();
        activate_btn = new javax.swing.JButton();
        backadd_btn = new javax.swing.JButton();
        UserStatusTable = new javax.swing.JScrollPane();
        UserStatus = new javax.swing.JTable();
        user_select = new javax.swing.JComboBox();
        jLabel20 = new javax.swing.JLabel();
        Add_cntryPanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        Ctry = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        nextList = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        compliantBox = new javax.swing.JComboBox();
        addLink = new javax.swing.JButton();
        backCtry = new javax.swing.JButton();
        finish = new javax.swing.JButton();
        cntryName = new javax.swing.JLabel();
        proceed = new javax.swing.JButton();
        rmv = new javax.swing.JButton();
        File_trnsfrPanel = new javax.swing.JPanel();
        trnsfr = new javax.swing.JButton();
        backadd_btn1 = new javax.swing.JButton();
        FileTrnsfrTable = new javax.swing.JScrollPane();
        fileTrnsfr = new javax.swing.JTable();
        file_sel1 = new javax.swing.JComboBox();
        jLabel23 = new javax.swing.JLabel();
        view_file = new javax.swing.JButton();
        UserPanel = new javax.swing.JPanel();
        Add_removeFile = new javax.swing.JPanel();
        add_file = new javax.swing.JButton();
        vw_rm_file = new javax.swing.JButton();
        logout_usr = new javax.swing.JButton();
        Add_FilePanel = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        re_pass_txt = new javax.swing.JPasswordField();
        filename_txt = new javax.swing.JTextField();
        browse_btn = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        filetype_combo = new javax.swing.JComboBox();
        backfile_btn2 = new javax.swing.JButton();
        newfile_btn2 = new javax.swing.JButton();
        addfile_btn2 = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        vw_rmPanel = new javax.swing.JPanel();
        downloadfile_btn = new javax.swing.JButton();
        file_view = new javax.swing.JButton();
        file_back = new javax.swing.JButton();
        FileInfoTable = new javax.swing.JScrollPane();
        FileTable = new javax.swing.JTable();
        fileinfo_lbl = new javax.swing.JLabel();
        rmfile_btn = new javax.swing.JButton();
        file_sel = new javax.swing.JComboBox();
        transfer = new javax.swing.JButton();
        ForgotPanel = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        name_txt = new javax.swing.JTextField();
        email_txt = new javax.swing.JTextField();
        phone_txt = new javax.swing.JTextField();
        help = new javax.swing.JButton();
        back_forgot = new javax.swing.JButton();
        RegisterPanel = new javax.swing.JPanel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        name = new javax.swing.JTextField();
        email = new javax.swing.JTextField();
        password = new javax.swing.JPasswordField();
        cnfrm_pass = new javax.swing.JPasswordField();
        phone = new javax.swing.JTextField();
        country = new javax.swing.JComboBox();
        back_rgstr = new javax.swing.JButton();
        apply_btn = new javax.swing.JButton();
        passState = new javax.swing.JLabel();
        validity = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        Role = new javax.swing.JComboBox();

        transferPanel.setBackground(java.awt.SystemColor.textHighlight);

        jLabel4.setFont(new java.awt.Font("Quattrocento", 0, 18)); // NOI18N
        jLabel4.setText("MAIN FILE");

        jLabel24.setFont(new java.awt.Font("Quattrocento", 0, 18)); // NOI18N
        jLabel24.setText("REPLICATION");

        mainCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mainComboActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout transferPanelLayout = new javax.swing.GroupLayout(transferPanel);
        transferPanel.setLayout(transferPanelLayout);
        transferPanelLayout.setHorizontalGroup(
            transferPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(transferPanelLayout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(transferPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(jLabel24))
                .addGap(24, 24, 24)
                .addGroup(transferPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(mainCombo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(repliCombo, 0, 163, Short.MAX_VALUE))
                .addContainerGap(109, Short.MAX_VALUE))
        );
        transferPanelLayout.setVerticalGroup(
            transferPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(transferPanelLayout.createSequentialGroup()
                .addGap(63, 63, 63)
                .addGroup(transferPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(mainCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(transferPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel24)
                    .addComponent(repliCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(73, Short.MAX_VALUE))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        ParentPanel.setBackground(java.awt.SystemColor.textHighlight);
        ParentPanel.setLayout(new java.awt.BorderLayout());

        ConstantPanel.setBackground(java.awt.SystemColor.textHighlight);
        ConstantPanel.setPreferredSize(new java.awt.Dimension(775, 100));

        jLabel7.setFont(new java.awt.Font("Friday Night Lights", 0, 24)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("CLOUD SIMULATOR");
        jLabel7.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        jLabel21.setFont(new java.awt.Font("Friday Night Lights", 0, 24)); // NOI18N
        jLabel21.setForeground(new java.awt.Color(255, 255, 255));
        jLabel21.setText("WITH");

        jLabel22.setFont(new java.awt.Font("Friday Night Lights", 0, 24)); // NOI18N
        jLabel22.setForeground(new java.awt.Color(255, 255, 255));
        jLabel22.setText("DATA RESIDENCY as a SERVICE");

        javax.swing.GroupLayout ConstantPanelLayout = new javax.swing.GroupLayout(ConstantPanel);
        ConstantPanel.setLayout(ConstantPanelLayout);
        ConstantPanelLayout.setHorizontalGroup(
            ConstantPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ConstantPanelLayout.createSequentialGroup()
                .addGap(0, 229, Short.MAX_VALUE)
                .addComponent(jLabel22)
                .addGap(221, 221, 221))
            .addGroup(ConstantPanelLayout.createSequentialGroup()
                .addGroup(ConstantPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(ConstantPanelLayout.createSequentialGroup()
                        .addGap(348, 348, 348)
                        .addComponent(jLabel21))
                    .addGroup(ConstantPanelLayout.createSequentialGroup()
                        .addGap(282, 282, 282)
                        .addComponent(jLabel7)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        ConstantPanelLayout.setVerticalGroup(
            ConstantPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ConstantPanelLayout.createSequentialGroup()
                .addGap(7, 7, 7)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel21)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel22)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        ParentPanel.add(ConstantPanel, java.awt.BorderLayout.PAGE_START);

        VariablePanel.setBackground(java.awt.SystemColor.textHighlight);
        VariablePanel.setPreferredSize(new java.awt.Dimension(775, 344));
        VariablePanel.setLayout(new java.awt.CardLayout());

        LoginPanel.setBackground(java.awt.SystemColor.textHighlight);
        LoginPanel.setPreferredSize(new java.awt.Dimension(775, 344));

        username_txt.setFont(new java.awt.Font("Quattrocento", 0, 18)); // NOI18N
        username_txt.setText("username");
        username_txt.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                username_txtMousePressed(evt);
            }
        });
        username_txt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                username_txtActionPerformed(evt);
            }
        });

        password_txt.setFont(new java.awt.Font("Quattrocento", 0, 18)); // NOI18N
        password_txt.setText("password");
        password_txt.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                password_txtMousePressed(evt);
            }
        });

        login_btn.setFont(new java.awt.Font("Quattrocento", 1, 14)); // NOI18N
        login_btn.setText("LOGIN");
        login_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                login_btnActionPerformed(evt);
            }
        });

        reset_btn.setFont(new java.awt.Font("Quattrocento", 1, 14)); // NOI18N
        reset_btn.setText("RESET");
        reset_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reset_btnActionPerformed(evt);
            }
        });

        register_btn.setFont(new java.awt.Font("Quattrocento", 1, 14)); // NOI18N
        register_btn.setText("REGISTER");
        register_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                register_btnActionPerformed(evt);
            }
        });

        forgot_lbl.setBackground(new java.awt.Color(255, 255, 204));
        forgot_lbl.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        forgot_lbl.setForeground(java.awt.SystemColor.window);
        forgot_lbl.setText("FORGOT PASSWORD");
        forgot_lbl.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, java.awt.SystemColor.control));
        forgot_lbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                forgot_lblMousePressed(evt);
            }
        });

        javax.swing.GroupLayout LoginPanelLayout = new javax.swing.GroupLayout(LoginPanel);
        LoginPanel.setLayout(LoginPanelLayout);
        LoginPanelLayout.setHorizontalGroup(
            LoginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, LoginPanelLayout.createSequentialGroup()
                .addContainerGap(253, Short.MAX_VALUE)
                .addGroup(LoginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(LoginPanelLayout.createSequentialGroup()
                        .addComponent(forgot_lbl)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, LoginPanelLayout.createSequentialGroup()
                        .addGroup(LoginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(LoginPanelLayout.createSequentialGroup()
                                .addComponent(register_btn)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(login_btn)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(reset_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(username_txt, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 297, Short.MAX_VALUE)
                            .addComponent(password_txt, javax.swing.GroupLayout.Alignment.LEADING))
                        .addGap(241, 241, 241))))
        );
        LoginPanelLayout.setVerticalGroup(
            LoginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(LoginPanelLayout.createSequentialGroup()
                .addGap(97, 97, 97)
                .addComponent(username_txt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(password_txt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(LoginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(reset_btn)
                    .addComponent(login_btn)
                    .addComponent(register_btn))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(forgot_lbl)
                .addGap(186, 186, 186))
        );

        VariablePanel.add(LoginPanel, "card2");

        AdminPanel.setBackground(java.awt.SystemColor.textHighlight);
        AdminPanel.setPreferredSize(new java.awt.Dimension(775, 344));
        AdminPanel.setLayout(new java.awt.CardLayout());

        User_Country.setBackground(java.awt.SystemColor.textHighlight);
        User_Country.setPreferredSize(new java.awt.Dimension(775, 344));

        mng_user.setFont(new java.awt.Font("Quattrocento", 1, 14)); // NOI18N
        mng_user.setText("Manage USER");
        mng_user.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        mng_user.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mng_userActionPerformed(evt);
            }
        });

        mng_cntry.setFont(new java.awt.Font("Quattrocento", 1, 14)); // NOI18N
        mng_cntry.setText("Manage COUNTRY");
        mng_cntry.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        mng_cntry.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mng_cntryActionPerformed(evt);
            }
        });

        logout_admin.setFont(new java.awt.Font("Quattrocento", 1, 14)); // NOI18N
        logout_admin.setText("LOGOUT");
        logout_admin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logout_adminActionPerformed(evt);
            }
        });

        transfer_admin.setFont(new java.awt.Font("Quattrocento", 1, 14)); // NOI18N
        transfer_admin.setText("Transfer FILES");
        transfer_admin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                transfer_adminActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout User_CountryLayout = new javax.swing.GroupLayout(User_Country);
        User_Country.setLayout(User_CountryLayout);
        User_CountryLayout.setHorizontalGroup(
            User_CountryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, User_CountryLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(logout_admin)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, User_CountryLayout.createSequentialGroup()
                .addGap(277, 277, 277)
                .addGroup(User_CountryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(transfer_admin, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(mng_user, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 219, Short.MAX_VALUE)
                    .addComponent(mng_cntry, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 219, Short.MAX_VALUE))
                .addGap(279, 279, 279))
        );
        User_CountryLayout.setVerticalGroup(
            User_CountryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(User_CountryLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(logout_admin)
                .addGap(95, 95, 95)
                .addComponent(mng_user, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(mng_cntry, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(transfer_admin, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(85, Short.MAX_VALUE))
        );

        AdminPanel.add(User_Country, "card2");

        Mng_userPanel.setBackground(java.awt.SystemColor.textHighlight);
        Mng_userPanel.setPreferredSize(new java.awt.Dimension(775, 344));

        adduser_btn.setFont(new java.awt.Font("Quattrocento", 1, 14)); // NOI18N
        adduser_btn.setText("ADD NEW USER");
        adduser_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                adduser_btnActionPerformed(evt);
            }
        });

        view_btn.setFont(new java.awt.Font("Quattrocento", 1, 14)); // NOI18N
        view_btn.setText("VIEW");
        view_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                view_btnActionPerformed(evt);
            }
        });

        back_btn.setFont(new java.awt.Font("Quattrocento", 1, 14)); // NOI18N
        back_btn.setText("BACK");
        back_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                back_btnActionPerformed(evt);
            }
        });

        UserTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        UserInfoTable.setViewportView(UserTable);

        info_lbl.setFont(new java.awt.Font("Quattrocento", 0, 18)); // NOI18N
        info_lbl.setText("Info for user  ");
        info_lbl.setEnabled(false);

        rmvuser_btn.setFont(new java.awt.Font("Quattrocento", 1, 14)); // NOI18N
        rmvuser_btn.setText("REMOVE USER");
        rmvuser_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rmvuser_btnActionPerformed(evt);
            }
        });

        user_sel.setFont(new java.awt.Font("Quattrocento", 0, 18)); // NOI18N
        user_sel.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        user_sel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                user_selActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout Mng_userPanelLayout = new javax.swing.GroupLayout(Mng_userPanel);
        Mng_userPanel.setLayout(Mng_userPanelLayout);
        Mng_userPanelLayout.setHorizontalGroup(
            Mng_userPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Mng_userPanelLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(Mng_userPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(Mng_userPanelLayout.createSequentialGroup()
                        .addComponent(info_lbl)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(Mng_userPanelLayout.createSequentialGroup()
                        .addComponent(adduser_btn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(rmvuser_btn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(view_btn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(back_btn))
                    .addGroup(Mng_userPanelLayout.createSequentialGroup()
                        .addGap(470, 470, 470)
                        .addComponent(user_sel, 0, 291, Short.MAX_VALUE))
                    .addComponent(UserInfoTable))
                .addContainerGap())
        );
        Mng_userPanelLayout.setVerticalGroup(
            Mng_userPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Mng_userPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(info_lbl)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(UserInfoTable, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(14, 14, 14)
                .addComponent(user_sel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(Mng_userPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(back_btn)
                    .addComponent(view_btn)
                    .addComponent(adduser_btn)
                    .addComponent(rmvuser_btn))
                .addGap(42, 42, 42))
        );

        AdminPanel.add(Mng_userPanel, "card3");

        Mng_cntryPanel.setBackground(java.awt.SystemColor.textHighlight);
        Mng_cntryPanel.setPreferredSize(new java.awt.Dimension(775, 344));

        info_lbl1.setFont(new java.awt.Font("Quattrocento", 0, 18)); // NOI18N
        info_lbl1.setText("Info for country");
        info_lbl1.setEnabled(false);

        CntryTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        CntryInfoTable.setViewportView(CntryTable);

        addcntry_btn.setFont(new java.awt.Font("Quattrocento", 1, 14)); // NOI18N
        addcntry_btn.setText("ADD/EDIT DATA RESIDENCY");
        addcntry_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addcntry_btnActionPerformed(evt);
            }
        });

        rmvcntry_btn.setFont(new java.awt.Font("Quattrocento", 1, 14)); // NOI18N
        rmvcntry_btn.setText("REMOVE COUNTRY");
        rmvcntry_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rmvcntry_btnActionPerformed(evt);
            }
        });

        view_btn1.setFont(new java.awt.Font("Quattrocento", 1, 14)); // NOI18N
        view_btn1.setText("VIEW");
        view_btn1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                view_btn1ActionPerformed(evt);
            }
        });

        back_btn1.setFont(new java.awt.Font("Quattrocento", 1, 14)); // NOI18N
        back_btn1.setText("BACK");
        back_btn1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                back_btn1ActionPerformed(evt);
            }
        });

        country_sel.setFont(new java.awt.Font("Quattrocento", 0, 18)); // NOI18N
        country_sel.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "SELECT" }));
        country_sel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                country_selActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout Mng_cntryPanelLayout = new javax.swing.GroupLayout(Mng_cntryPanel);
        Mng_cntryPanel.setLayout(Mng_cntryPanelLayout);
        Mng_cntryPanelLayout.setHorizontalGroup(
            Mng_cntryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Mng_cntryPanelLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(Mng_cntryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(CntryInfoTable, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(Mng_cntryPanelLayout.createSequentialGroup()
                        .addGroup(Mng_cntryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(info_lbl1)
                            .addGroup(Mng_cntryPanelLayout.createSequentialGroup()
                                .addComponent(addcntry_btn)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(rmvcntry_btn)
                                .addGroup(Mng_cntryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(Mng_cntryPanelLayout.createSequentialGroup()
                                        .addGap(177, 177, 177)
                                        .addComponent(view_btn1)
                                        .addGap(12, 12, 12)
                                        .addComponent(back_btn1))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, Mng_cntryPanelLayout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(country_sel, javax.swing.GroupLayout.PREFERRED_SIZE, 241, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(8, 8, 8)))))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        Mng_cntryPanelLayout.setVerticalGroup(
            Mng_cntryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Mng_cntryPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(info_lbl1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(CntryInfoTable, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(Mng_cntryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, Mng_cntryPanelLayout.createSequentialGroup()
                        .addComponent(country_sel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(Mng_cntryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(view_btn1)
                            .addComponent(back_btn1))
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, Mng_cntryPanelLayout.createSequentialGroup()
                        .addGroup(Mng_cntryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(addcntry_btn)
                            .addComponent(rmvcntry_btn))
                        .addGap(62, 62, 62))))
        );

        AdminPanel.add(Mng_cntryPanel, "card4");

        Add_userPanel.setBackground(java.awt.SystemColor.textHighlight);
        Add_userPanel.setPreferredSize(new java.awt.Dimension(775, 344));

        activate_btn.setFont(new java.awt.Font("Quattrocento", 1, 14)); // NOI18N
        activate_btn.setText("ACTIVATE");
        activate_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                activate_btnActionPerformed(evt);
            }
        });

        backadd_btn.setFont(new java.awt.Font("Quattrocento", 1, 14)); // NOI18N
        backadd_btn.setText("BACK");
        backadd_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backadd_btnActionPerformed(evt);
            }
        });

        UserStatus.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        UserStatusTable.setViewportView(UserStatus);

        user_select.setFont(new java.awt.Font("Quattrocento", 0, 18)); // NOI18N
        user_select.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                user_selectActionPerformed(evt);
            }
        });

        jLabel20.setFont(new java.awt.Font("Quattrocento", 0, 18)); // NOI18N
        jLabel20.setText("SELECT USER TO ACTIVATE");

        javax.swing.GroupLayout Add_userPanelLayout = new javax.swing.GroupLayout(Add_userPanel);
        Add_userPanel.setLayout(Add_userPanelLayout);
        Add_userPanelLayout.setHorizontalGroup(
            Add_userPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, Add_userPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(Add_userPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(UserStatusTable, javax.swing.GroupLayout.DEFAULT_SIZE, 751, Short.MAX_VALUE)
                    .addGroup(Add_userPanelLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(Add_userPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(Add_userPanelLayout.createSequentialGroup()
                                .addComponent(activate_btn)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(backadd_btn))
                            .addGroup(Add_userPanelLayout.createSequentialGroup()
                                .addComponent(jLabel20)
                                .addGap(18, 18, 18)
                                .addComponent(user_select, javax.swing.GroupLayout.PREFERRED_SIZE, 281, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap())
        );
        Add_userPanelLayout.setVerticalGroup(
            Add_userPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Add_userPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(UserStatusTable, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(Add_userPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(user_select, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel20))
                .addGap(17, 17, 17)
                .addGroup(Add_userPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(backadd_btn)
                    .addComponent(activate_btn))
                .addGap(42, 42, 42))
        );

        AdminPanel.add(Add_userPanel, "card3");

        Add_cntryPanel.setBackground(java.awt.SystemColor.textHighlight);

        jLabel1.setFont(new java.awt.Font("Quattrocento", 0, 18)); // NOI18N
        jLabel1.setText("COUNTRY");

        Ctry.setFont(new java.awt.Font("Quattrocento", 0, 18)); // NOI18N
        Ctry.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "US", "INDIA", "AFRICA", "MIDDLE EAST" }));
        Ctry.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CtryActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Quattrocento", 0, 18)); // NOI18N
        jLabel2.setText("DATA RESIDENCY COMPLIANTS");
        jLabel2.setEnabled(false);

        nextList.setFont(new java.awt.Font("Quattrocento", 0, 18)); // NOI18N
        nextList.setEnabled(false);

        jLabel3.setFont(new java.awt.Font("Quattrocento", 0, 18)); // NOI18N
        jLabel3.setText("SELECT COMPLIANTS");
        jLabel3.setEnabled(false);

        compliantBox.setFont(new java.awt.Font("Quattrocento", 0, 18)); // NOI18N
        compliantBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "NorthCentralUS", "SouthCentralUS", "NorthEurope", "WestEurope", "CentralIndia", "SouthIndia", "WestIndia", "EastAsia" }));
        compliantBox.setEnabled(false);

        addLink.setFont(new java.awt.Font("Quattrocento", 1, 14)); // NOI18N
        addLink.setText("ADD");
        addLink.setEnabled(false);
        addLink.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addLinkActionPerformed(evt);
            }
        });

        backCtry.setFont(new java.awt.Font("Quattrocento", 1, 14)); // NOI18N
        backCtry.setText("BACK");
        backCtry.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backCtryActionPerformed(evt);
            }
        });

        finish.setFont(new java.awt.Font("Quattrocento", 1, 14)); // NOI18N
        finish.setText("FINISH");
        finish.setEnabled(false);
        finish.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                finishActionPerformed(evt);
            }
        });

        cntryName.setFont(new java.awt.Font("Quattrocento", 0, 18)); // NOI18N
        cntryName.setText("ctry");

        proceed.setFont(new java.awt.Font("Quattrocento", 1, 14)); // NOI18N
        proceed.setText("PROCEED");
        proceed.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                proceedActionPerformed(evt);
            }
        });

        rmv.setFont(new java.awt.Font("Quattrocento", 1, 14)); // NOI18N
        rmv.setText("REMOVE");
        rmv.setEnabled(false);
        rmv.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rmvActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout Add_cntryPanelLayout = new javax.swing.GroupLayout(Add_cntryPanel);
        Add_cntryPanel.setLayout(Add_cntryPanelLayout);
        Add_cntryPanelLayout.setHorizontalGroup(
            Add_cntryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Add_cntryPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(Add_cntryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(Add_cntryPanelLayout.createSequentialGroup()
                        .addGroup(Add_cntryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addGroup(Add_cntryPanelLayout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(18, 18, 18)
                                .addComponent(cntryName, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addGroup(Add_cntryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(nextList)
                            .addGroup(Add_cntryPanelLayout.createSequentialGroup()
                                .addComponent(Ctry, 0, 1, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(proceed))
                            .addComponent(compliantBox, 0, 405, Short.MAX_VALUE))
                        .addGap(89, 89, 89))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, Add_cntryPanelLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(Add_cntryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, Add_cntryPanelLayout.createSequentialGroup()
                                .addComponent(finish)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(backCtry)
                                .addContainerGap())
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, Add_cntryPanelLayout.createSequentialGroup()
                                .addComponent(addLink)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(rmv)
                                .addGap(87, 87, 87))))))
        );
        Add_cntryPanelLayout.setVerticalGroup(
            Add_cntryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Add_cntryPanelLayout.createSequentialGroup()
                .addContainerGap(124, Short.MAX_VALUE)
                .addGroup(Add_cntryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Ctry, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(cntryName)
                    .addComponent(proceed))
                .addGap(17, 17, 17)
                .addGroup(Add_cntryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(nextList, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(Add_cntryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(compliantBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(Add_cntryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addLink)
                    .addComponent(rmv))
                .addGap(58, 58, 58)
                .addGroup(Add_cntryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(backCtry)
                    .addComponent(finish))
                .addGap(42, 42, 42))
        );

        AdminPanel.add(Add_cntryPanel, "card6");

        File_trnsfrPanel.setBackground(java.awt.SystemColor.textHighlight);

        trnsfr.setFont(new java.awt.Font("Quattrocento", 1, 14)); // NOI18N
        trnsfr.setText("TRANSFER");
        trnsfr.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                trnsfrActionPerformed(evt);
            }
        });

        backadd_btn1.setFont(new java.awt.Font("Quattrocento", 1, 14)); // NOI18N
        backadd_btn1.setText("BACK");
        backadd_btn1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backadd_btn1ActionPerformed(evt);
            }
        });

        fileTrnsfr.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        FileTrnsfrTable.setViewportView(fileTrnsfr);

        file_sel1.setFont(new java.awt.Font("Quattrocento", 0, 18)); // NOI18N
        file_sel1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                file_sel1ActionPerformed(evt);
            }
        });

        jLabel23.setFont(new java.awt.Font("Quattrocento", 0, 18)); // NOI18N
        jLabel23.setText("SELECT FILE TO TRANSFER");

        view_file.setFont(new java.awt.Font("Quattrocento", 1, 14)); // NOI18N
        view_file.setText("VIEW");
        view_file.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                view_fileActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout File_trnsfrPanelLayout = new javax.swing.GroupLayout(File_trnsfrPanel);
        File_trnsfrPanel.setLayout(File_trnsfrPanelLayout);
        File_trnsfrPanelLayout.setHorizontalGroup(
            File_trnsfrPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, File_trnsfrPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(File_trnsfrPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(FileTrnsfrTable, javax.swing.GroupLayout.DEFAULT_SIZE, 767, Short.MAX_VALUE)
                    .addGroup(File_trnsfrPanelLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel23)
                        .addGap(18, 18, 18)
                        .addComponent(file_sel1, javax.swing.GroupLayout.PREFERRED_SIZE, 281, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(File_trnsfrPanelLayout.createSequentialGroup()
                        .addComponent(trnsfr)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(view_file)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(backadd_btn1)))
                .addContainerGap())
        );
        File_trnsfrPanelLayout.setVerticalGroup(
            File_trnsfrPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(File_trnsfrPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(FileTrnsfrTable, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(File_trnsfrPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(file_sel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel23))
                .addGap(17, 17, 17)
                .addGroup(File_trnsfrPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(backadd_btn1)
                    .addComponent(trnsfr)
                    .addComponent(view_file))
                .addGap(42, 42, 42))
        );

        AdminPanel.add(File_trnsfrPanel, "card7");

        VariablePanel.add(AdminPanel, "card3");

        UserPanel.setBackground(java.awt.SystemColor.textHighlight);
        UserPanel.setPreferredSize(new java.awt.Dimension(775, 344));
        UserPanel.setLayout(new java.awt.CardLayout());

        Add_removeFile.setBackground(java.awt.SystemColor.textHighlight);
        Add_removeFile.setPreferredSize(new java.awt.Dimension(775, 344));

        add_file.setFont(new java.awt.Font("Quattrocento", 1, 14)); // NOI18N
        add_file.setText("Add FILE");
        add_file.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        add_file.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                add_fileActionPerformed(evt);
            }
        });

        vw_rm_file.setFont(new java.awt.Font("Quattrocento", 1, 14)); // NOI18N
        vw_rm_file.setText("View/Remove FILE");
        vw_rm_file.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        vw_rm_file.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                vw_rm_fileActionPerformed(evt);
            }
        });

        logout_usr.setFont(new java.awt.Font("Quattrocento", 1, 14)); // NOI18N
        logout_usr.setText("LOGOUT");
        logout_usr.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logout_usrActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout Add_removeFileLayout = new javax.swing.GroupLayout(Add_removeFile);
        Add_removeFile.setLayout(Add_removeFileLayout);
        Add_removeFileLayout.setHorizontalGroup(
            Add_removeFileLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Add_removeFileLayout.createSequentialGroup()
                .addGap(277, 277, 277)
                .addGroup(Add_removeFileLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(add_file, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(vw_rm_file, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 219, Short.MAX_VALUE))
                .addGap(279, 279, 279))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, Add_removeFileLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(logout_usr)
                .addContainerGap())
        );
        Add_removeFileLayout.setVerticalGroup(
            Add_removeFileLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Add_removeFileLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(logout_usr)
                .addGap(95, 95, 95)
                .addComponent(add_file, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(vw_rm_file, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(130, Short.MAX_VALUE))
        );

        UserPanel.add(Add_removeFile, "card2");

        Add_FilePanel.setBackground(java.awt.SystemColor.textHighlight);
        Add_FilePanel.setPreferredSize(new java.awt.Dimension(775, 344));

        jLabel8.setFont(new java.awt.Font("Quattrocento", 0, 18)); // NOI18N
        jLabel8.setText("Re-Enter Password:");

        re_pass_txt.setFont(new java.awt.Font("Quattrocento", 0, 14)); // NOI18N

        filename_txt.setFont(new java.awt.Font("Quattrocento", 0, 14)); // NOI18N

        browse_btn.setFont(new java.awt.Font("Quattrocento", 1, 14)); // NOI18N
        browse_btn.setText("Browse...");
        browse_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                browse_btnActionPerformed(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Quattrocento", 0, 18)); // NOI18N
        jLabel9.setText("Filename");

        jLabel10.setFont(new java.awt.Font("Quattrocento", 0, 18)); // NOI18N
        jLabel10.setText("Filetype:");

        filetype_combo.setFont(new java.awt.Font("Quattrocento", 0, 18)); // NOI18N
        filetype_combo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Select", "TEXT", "IMAGE", "AUDIO", "VIDEO", "DOCUMENT", "Others" }));
        filetype_combo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                filetype_comboActionPerformed(evt);
            }
        });

        backfile_btn2.setFont(new java.awt.Font("Quattrocento", 1, 14)); // NOI18N
        backfile_btn2.setText("BACK");
        backfile_btn2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backfile_btn2ActionPerformed(evt);
            }
        });

        newfile_btn2.setFont(new java.awt.Font("Quattrocento", 1, 14)); // NOI18N
        newfile_btn2.setText("NEW");
        newfile_btn2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newfile_btn2ActionPerformed(evt);
            }
        });

        addfile_btn2.setFont(new java.awt.Font("Quattrocento", 1, 14)); // NOI18N
        addfile_btn2.setText("ADD");
        addfile_btn2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addfile_btn2ActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Quattrocento", 0, 14)); // NOI18N
        jLabel6.setText("Select other as Filetype if not sure...");

        javax.swing.GroupLayout Add_FilePanelLayout = new javax.swing.GroupLayout(Add_FilePanel);
        Add_FilePanel.setLayout(Add_FilePanelLayout);
        Add_FilePanelLayout.setHorizontalGroup(
            Add_FilePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, Add_FilePanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(addfile_btn2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(newfile_btn2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(backfile_btn2)
                .addContainerGap())
            .addGroup(Add_FilePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(Add_FilePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8)
                    .addComponent(jLabel9)
                    .addComponent(jLabel10))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(Add_FilePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(Add_FilePanelLayout.createSequentialGroup()
                        .addComponent(filetype_combo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel6))
                    .addComponent(re_pass_txt, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(Add_FilePanelLayout.createSequentialGroup()
                        .addComponent(filename_txt, javax.swing.GroupLayout.PREFERRED_SIZE, 494, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(browse_btn)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        Add_FilePanelLayout.setVerticalGroup(
            Add_FilePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Add_FilePanelLayout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addGroup(Add_FilePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(re_pass_txt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(41, 41, 41)
                .addGroup(Add_FilePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(filename_txt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(browse_btn)
                    .addComponent(jLabel9))
                .addGap(42, 42, 42)
                .addGroup(Add_FilePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(filetype_combo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 109, Short.MAX_VALUE)
                .addGroup(Add_FilePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(backfile_btn2)
                    .addComponent(newfile_btn2)
                    .addComponent(addfile_btn2))
                .addContainerGap())
        );

        UserPanel.add(Add_FilePanel, "card3");

        vw_rmPanel.setBackground(java.awt.SystemColor.textHighlight);
        vw_rmPanel.setPreferredSize(new java.awt.Dimension(775, 344));

        downloadfile_btn.setFont(new java.awt.Font("Quattrocento", 1, 14)); // NOI18N
        downloadfile_btn.setText("DOWNLOAD FILE");
        downloadfile_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                downloadfile_btnActionPerformed(evt);
            }
        });

        file_view.setFont(new java.awt.Font("Quattrocento", 1, 14)); // NOI18N
        file_view.setText("VIEW");
        file_view.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                file_viewActionPerformed(evt);
            }
        });

        file_back.setFont(new java.awt.Font("Quattrocento", 1, 14)); // NOI18N
        file_back.setText("BACK");
        file_back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                file_backActionPerformed(evt);
            }
        });

        FileTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        FileInfoTable.setViewportView(FileTable);

        fileinfo_lbl.setFont(new java.awt.Font("Quattrocento", 0, 18)); // NOI18N
        fileinfo_lbl.setText("Info for file");
        fileinfo_lbl.setEnabled(false);

        rmfile_btn.setFont(new java.awt.Font("Quattrocento", 1, 14)); // NOI18N
        rmfile_btn.setText("REMOVE FILE");
        rmfile_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rmfile_btnActionPerformed(evt);
            }
        });

        file_sel.setFont(new java.awt.Font("Quattrocento", 0, 18)); // NOI18N
        file_sel.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "SELECT", " " }));
        file_sel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                file_selActionPerformed(evt);
            }
        });

        transfer.setFont(new java.awt.Font("Quattrocento", 1, 14)); // NOI18N
        transfer.setText("TRANSFER");
        transfer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                transferActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout vw_rmPanelLayout = new javax.swing.GroupLayout(vw_rmPanel);
        vw_rmPanel.setLayout(vw_rmPanelLayout);
        vw_rmPanelLayout.setHorizontalGroup(
            vw_rmPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(vw_rmPanelLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(vw_rmPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(vw_rmPanelLayout.createSequentialGroup()
                        .addComponent(fileinfo_lbl)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(vw_rmPanelLayout.createSequentialGroup()
                        .addComponent(downloadfile_btn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(rmfile_btn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(transfer, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(file_view)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(file_back))
                    .addGroup(vw_rmPanelLayout.createSequentialGroup()
                        .addGap(470, 470, 470)
                        .addComponent(file_sel, 0, 275, Short.MAX_VALUE))
                    .addComponent(FileInfoTable))
                .addContainerGap())
        );
        vw_rmPanelLayout.setVerticalGroup(
            vw_rmPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(vw_rmPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(fileinfo_lbl)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(FileInfoTable, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(14, 14, 14)
                .addComponent(file_sel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(vw_rmPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(file_back)
                    .addComponent(file_view)
                    .addComponent(downloadfile_btn)
                    .addComponent(rmfile_btn)
                    .addComponent(transfer))
                .addGap(42, 42, 42))
        );

        UserPanel.add(vw_rmPanel, "card3");

        VariablePanel.add(UserPanel, "card4");

        ForgotPanel.setBackground(java.awt.SystemColor.textHighlight);

        jLabel11.setFont(new java.awt.Font("Quattrocento", 0, 18)); // NOI18N
        jLabel11.setText("NAME");

        jLabel12.setFont(new java.awt.Font("Quattrocento", 0, 18)); // NOI18N
        jLabel12.setText("EMAIL ID");

        jLabel13.setFont(new java.awt.Font("Quattrocento", 0, 18)); // NOI18N
        jLabel13.setText("PHONE NO:");

        name_txt.setFont(new java.awt.Font("Quattrocento", 0, 18)); // NOI18N

        email_txt.setFont(new java.awt.Font("Quattrocento", 0, 18)); // NOI18N

        phone_txt.setFont(new java.awt.Font("Quattrocento", 0, 18)); // NOI18N

        help.setFont(new java.awt.Font("Quattrocento", 1, 14)); // NOI18N
        help.setText("HELP ME!");
        help.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                helpActionPerformed(evt);
            }
        });

        back_forgot.setFont(new java.awt.Font("Quattrocento", 1, 14)); // NOI18N
        back_forgot.setText("BACK");
        back_forgot.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                back_forgotActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout ForgotPanelLayout = new javax.swing.GroupLayout(ForgotPanel);
        ForgotPanel.setLayout(ForgotPanelLayout);
        ForgotPanelLayout.setHorizontalGroup(
            ForgotPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ForgotPanelLayout.createSequentialGroup()
                .addGap(119, 119, 119)
                .addGroup(ForgotPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel11)
                    .addComponent(jLabel12)
                    .addComponent(jLabel13))
                .addGap(32, 32, 32)
                .addGroup(ForgotPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(ForgotPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(name_txt, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
                        .addComponent(phone_txt))
                    .addComponent(email_txt, javax.swing.GroupLayout.PREFERRED_SIZE, 292, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(251, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ForgotPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(help)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(back_forgot)
                .addContainerGap())
        );
        ForgotPanelLayout.setVerticalGroup(
            ForgotPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ForgotPanelLayout.createSequentialGroup()
                .addGap(75, 75, 75)
                .addGroup(ForgotPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(name_txt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(ForgotPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(email_txt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(ForgotPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(phone_txt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 178, Short.MAX_VALUE)
                .addGroup(ForgotPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(help)
                    .addComponent(back_forgot))
                .addContainerGap())
        );

        VariablePanel.add(ForgotPanel, "card5");

        RegisterPanel.setBackground(java.awt.SystemColor.textHighlight);

        jLabel14.setFont(new java.awt.Font("Quattrocento", 0, 18)); // NOI18N
        jLabel14.setText("NAME");

        jLabel15.setFont(new java.awt.Font("Quattrocento", 0, 18)); // NOI18N
        jLabel15.setText("LOGIN ID (EMAIL)");

        jLabel16.setFont(new java.awt.Font("Quattrocento", 0, 18)); // NOI18N
        jLabel16.setText("PASSWORD");

        jLabel17.setFont(new java.awt.Font("Quattrocento", 0, 18)); // NOI18N
        jLabel17.setText("CONFIRM PASSWORD");

        jLabel18.setFont(new java.awt.Font("Quattrocento", 0, 18)); // NOI18N
        jLabel18.setText("PHONE NUMBER");

        jLabel19.setFont(new java.awt.Font("Quattrocento", 0, 18)); // NOI18N
        jLabel19.setText("COUNTRY");

        name.setFont(new java.awt.Font("Quattrocento", 0, 18)); // NOI18N

        email.setFont(new java.awt.Font("Quattrocento", 0, 18)); // NOI18N
        email.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                emailKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                emailKeyTyped(evt);
            }
        });

        password.setFont(new java.awt.Font("Quattrocento", 0, 18)); // NOI18N

        cnfrm_pass.setFont(new java.awt.Font("Quattrocento", 0, 18)); // NOI18N
        cnfrm_pass.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                cnfrm_passKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                cnfrm_passKeyTyped(evt);
            }
        });

        phone.setFont(new java.awt.Font("Quattrocento", 0, 18)); // NOI18N

        country.setFont(new java.awt.Font("Quattrocento", 0, 18)); // NOI18N
        country.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "SELECT", "US", "AFRICA", "MIDDLE EAST", "INDIA" }));
        country.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                countryActionPerformed(evt);
            }
        });

        back_rgstr.setFont(new java.awt.Font("Quattrocento", 1, 14)); // NOI18N
        back_rgstr.setText("BACK");
        back_rgstr.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                back_rgstrActionPerformed(evt);
            }
        });

        apply_btn.setFont(new java.awt.Font("Quattrocento", 1, 14)); // NOI18N
        apply_btn.setText("APPLY");
        apply_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                apply_btnActionPerformed(evt);
            }
        });

        passState.setFont(new java.awt.Font("Quattrocento", 0, 18)); // NOI18N
        passState.setForeground(new java.awt.Color(51, 255, 51));
        passState.setText("Match");
        passState.setEnabled(false);

        validity.setFont(new java.awt.Font("Quattrocento", 0, 18)); // NOI18N
        validity.setText("Valid");
        validity.setEnabled(false);

        jLabel5.setFont(new java.awt.Font("Quattrocento", 0, 18)); // NOI18N
        jLabel5.setText("+12-1234567890");

        jLabel25.setFont(new java.awt.Font("Quattrocento", 0, 18)); // NOI18N
        jLabel25.setText("ROLE");

        Role.setFont(new java.awt.Font("Quattrocento", 0, 18)); // NOI18N
        Role.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "USER", "CSP" }));
        Role.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RoleActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout RegisterPanelLayout = new javax.swing.GroupLayout(RegisterPanel);
        RegisterPanel.setLayout(RegisterPanelLayout);
        RegisterPanelLayout.setHorizontalGroup(
            RegisterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(RegisterPanelLayout.createSequentialGroup()
                .addGroup(RegisterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, RegisterPanelLayout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(apply_btn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(back_rgstr))
                    .addGroup(RegisterPanelLayout.createSequentialGroup()
                        .addGap(37, 37, 37)
                        .addGroup(RegisterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(RegisterPanelLayout.createSequentialGroup()
                                .addGroup(RegisterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel14)
                                    .addComponent(jLabel15)
                                    .addComponent(jLabel16))
                                .addGap(60, 60, 60)
                                .addGroup(RegisterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(name)
                                    .addComponent(email, javax.swing.GroupLayout.DEFAULT_SIZE, 330, Short.MAX_VALUE)
                                    .addComponent(password)))
                            .addGroup(RegisterPanelLayout.createSequentialGroup()
                                .addGroup(RegisterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel17)
                                    .addComponent(jLabel18)
                                    .addComponent(jLabel19)
                                    .addComponent(jLabel25))
                                .addGap(18, 18, 18)
                                .addGroup(RegisterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(cnfrm_pass, javax.swing.GroupLayout.DEFAULT_SIZE, 331, Short.MAX_VALUE)
                                    .addComponent(phone)
                                    .addComponent(country, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(Role, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(RegisterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(passState)
                            .addComponent(validity)
                            .addComponent(jLabel5))
                        .addGap(0, 63, Short.MAX_VALUE)))
                .addContainerGap())
        );
        RegisterPanelLayout.setVerticalGroup(
            RegisterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(RegisterPanelLayout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addGroup(RegisterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(RegisterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(email, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(validity))
                .addGap(18, 18, 18)
                .addGroup(RegisterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel16)
                    .addComponent(password, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(RegisterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel17)
                    .addComponent(cnfrm_pass, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(passState))
                .addGap(18, 18, 18)
                .addGroup(RegisterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel18)
                    .addComponent(phone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addGap(18, 18, 18)
                .addGroup(RegisterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel19)
                    .addComponent(country, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(RegisterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel25)
                    .addComponent(Role, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 50, Short.MAX_VALUE)
                .addGroup(RegisterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(back_rgstr)
                    .addComponent(apply_btn))
                .addContainerGap())
        );

        VariablePanel.add(RegisterPanel, "card6");

        ParentPanel.add(VariablePanel, java.awt.BorderLayout.CENTER);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(ParentPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(ParentPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 514, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void username_txtMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_username_txtMousePressed
        username_txt.setText("");// TODO add your handling code here:
    }//GEN-LAST:event_username_txtMousePressed

    private void password_txtMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_password_txtMousePressed
        password_txt.setText("");// TODO add your handling code here:
    }//GEN-LAST:event_password_txtMousePressed

    private void reset_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reset_btnActionPerformed
        username_txt.setText("");
        password_txt.setText("");// TODO add your handling code here:
    }//GEN-LAST:event_reset_btnActionPerformed
    private void viewUser() {
        try {
            Connection con = DriverManager.getConnection(host, uName, uPass);
            Statement stmt = con.createStatement();
            String SQL = "SELECT * FROM CLOUDUSER where STATUS='ACTIVE'";
            ResultSet rs = stmt.executeQuery(SQL);
            user_sel.removeAllItems();
            user_sel.addItem("SELECT".toString());
            while (rs.next()) {
                if (rs.getString("NAME").equals("admin")) {
                    continue;
                } else {
                    user_sel.addItem(rs.getString("NAME").toString());
                }
            }
            con.close();

        } catch (SQLException ex) {
            Logger.getLogger(Main_Frame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    private void mng_userActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mng_userActionPerformed
        VariablePanel.removeAll();
        VariablePanel.revalidate();
        VariablePanel.repaint();
        Mng_userPanel.revalidate();
        Mng_userPanel.repaint();
        VariablePanel.add(Mng_userPanel);
        viewUser();
    }//GEN-LAST:event_mng_userActionPerformed

    private void add_fileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_add_fileActionPerformed
        VariablePanel.removeAll();
        VariablePanel.add(Add_FilePanel);
        VariablePanel.repaint();
        VariablePanel.revalidate();// TODO add your handling code here:
    }//GEN-LAST:event_add_fileActionPerformed

    private void downloadfile_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_downloadfile_btnActionPerformed
        InputStream is = null;
        OutputStream os = null;
        JFileChooser chooser;
        chooser = new JFileChooser();
        String path="";
        String ext="";
        String mainFile="",replica="",download="";
        int answer = chooser.showSaveDialog(Main_Frame.this);
        if (answer == JFileChooser.APPROVE_OPTION) {
            
            saveFile = chooser.getSelectedFile();
            path=saveFile.getAbsolutePath();
        
        try {
            Connection con = DriverManager.getConnection(host, uName, uPass);
            Statement st1 = con.createStatement();
            ResultSet rs1 = st1.executeQuery("SELECT * FROM CLOUDFILE WHERE FILENAME='"+file_sel.getSelectedItem().toString()+"'");
            if(rs1.next()){
                ext=rs1.getString("FILETYPE");
                mainFile=rs1.getString("COUNTRY");
                replica=rs1.getString("REPLICATE");
            }
            Random r=new Random();
            int ch=r.nextInt(10);
            if(ch%2==0)
                download=mainFile;
            else
                download=replica;
            Statement st = con.createStatement();
            ResultSet rs = st.executeQuery("SELECT * FROM "+ download+" WHERE FILENAME='"+file_sel.getSelectedItem().toString()+"'");
            if(rs.next()){
                is = rs.getBinaryStream(2);
            }
            
            os = new FileOutputStream(path+ext);
            byte[] content = new byte[1024];
            int size = 0;
            while((size = is.read(content)) != -1){
                os.write(content, 0, size);
            }
                JOptionPane.showMessageDialog(this, "DOWNLOAD COMPLETE FROM "+download);
                is.close();
                os.close();
            
        } catch (SQLException ex) {
            Logger.getLogger(Main_Frame.class.getName()).log(Level.SEVERE, null, ex);
        } catch (FileNotFoundException ex) {
            Logger.getLogger(Main_Frame.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(Main_Frame.class.getName()).log(Level.SEVERE, null, ex);
        }
        }
        else
        {
            JOptionPane.showMessageDialog(this, "DOWNLOAD CANCELLED BY USER");
        }
    }//GEN-LAST:event_downloadfile_btnActionPerformed

    private void forgot_lblMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_forgot_lblMousePressed
        VariablePanel.removeAll();
        VariablePanel.add(ForgotPanel);
        VariablePanel.repaint();
        VariablePanel.revalidate();// TODO add your handling code here:
    }//GEN-LAST:event_forgot_lblMousePressed
    private void ctry_view()
    {
         try {
            Connection con = DriverManager.getConnection(host, uName, uPass);
            Statement stmt = con.createStatement();
            String SQL = "SELECT * FROM TOKEN_CNTRY";
            ResultSet rs = stmt.executeQuery(SQL);
            country.removeAllItems();
            country.addItem("SELECT");
            while (rs.next()) {
                    country.addItem(rs.getString("COUNTRY"));
            }
            con.close();

        } catch (SQLException ex) {
            Logger.getLogger(Main_Frame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    private void register_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_register_btnActionPerformed
        ctry_view();
        VariablePanel.removeAll();
        VariablePanel.add(RegisterPanel);
        VariablePanel.repaint();
        VariablePanel.revalidate();
        
    }//GEN-LAST:event_register_btnActionPerformed

    private void login_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_login_btnActionPerformed
        if (username_txt.getText().equals("") || password_txt.getPassword().equals("")) {
            JOptionPane.showMessageDialog(this, "FIELDS CAN'T BE EMPTY");
        } else {
            String m = username_txt.getText();
            String n = new String(password_txt.getPassword());
            try {
                Connection con = DriverManager.getConnection(host, uName, uPass);
                Statement stmt = con.createStatement();
                String SQL = "SELECT * FROM CLOUDUSER WHERE ID= '" + m + "' OR NAME = '" + m + "'";
                ResultSet rs = stmt.executeQuery(SQL);
                if (rs.next()) {
                    String user, pass, nam, status;
                    user = rs.getString("ID");
                    pass = rs.getString("PASSWORD");
                    nam = rs.getString("NAME");
                    status = rs.getString("STATUS");
                    if (m.compareTo(user) == 0 || m.compareTo(nam) == 0) {
                        if (n.compareTo(pass) == 0) {
                            if (status.equals("ACTIVE")) {
                                JOptionPane.showMessageDialog(this, "LOGIN SUCCESSFUL.");
                                loggedIn = user;
                                loggedCtry = rs.getString("COUNTRY");
                                loggedPass = pass;
                                VariablePanel.removeAll();
                                RBAC R = new RBAC();
                                System.out.println(loggedIn);
                                int flag= R.verify(loggedIn);
                                if (flag==1) {
                                    VariablePanel.removeAll();
                                    VariablePanel.add(AdminPanel);
                                    AdminPanel.repaint();
                                    AdminPanel.revalidate();
                                } else if(flag==2) {
                                    VariablePanel.removeAll();
                                    VariablePanel.add(UserPanel);
                                    UserPanel.repaint();
                                    UserPanel.revalidate();
                                }
                            } else {
                                JOptionPane.showMessageDialog(this, "YOU'VE NOT YET BEEN ACTIVATED.");
                            }
                        } else {
                            JOptionPane.showMessageDialog(this, "WRONG CREDENTIALS");
                        }
                    }
                } else {
                    username_txt.setText("");
                    password_txt.setText("");
                    JOptionPane.showMessageDialog(this, "FIELDS CAN'T BE EMPTY");
                }
                con.close();
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(this, "USER DOES NOT EXIST");
                //Logger.getLogger(Main_Frame.class.getName()).log(Level.SEVERE, null, ex);
            }// TODO add your handling code here:
        }// TODO add your handling code here:
        
    }//GEN-LAST:event_login_btnActionPerformed

    private void username_txtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_username_txtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_username_txtActionPerformed

    private void mng_cntryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mng_cntryActionPerformed
        VariablePanel.removeAll();
        VariablePanel.add(Mng_cntryPanel);
        VariablePanel.repaint();
        VariablePanel.revalidate();
        view_file1();
    }//GEN-LAST:event_mng_cntryActionPerformed
    private void activateUser() {
        try {
            Connection con = DriverManager.getConnection(host, uName, uPass);
            Statement stmt = con.createStatement();
            String SQL = "SELECT * FROM CLOUDUSER";
            ResultSet rs = stmt.executeQuery(SQL);
            ResultSetMetaData rsmd = rs.getMetaData();
            int columnCount = rsmd.getColumnCount();
            DefaultTableModel tm = (DefaultTableModel) UserStatus.getModel();
            tm.setColumnCount(0);
            for (int i = 1; i <= columnCount; i++) {
                tm.addColumn(rsmd.getColumnName(i));
            }
            tm.setRowCount(0);

            while (rs.next()) {
                String[] a = new String[columnCount];
                for (int i = 0; i < columnCount; i++) {
                    a[i] = rs.getString(i + 1);
                }
                tm.addRow(a);
            }
            tm.fireTableDataChanged();
            SQL = "SELECT NAME FROM CLOUDUSER WHERE STATUS NOT LIKE 'ACTIVE'";
            rs = stmt.executeQuery(SQL);
            user_select.removeAllItems();
            user_select.addItem("SELECT");
            while (rs.next()) {
                user_select.addItem(rs.getString("NAME"));
            }
            con.close();

        } catch (SQLException ex) {
            Logger.getLogger(Main_Frame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    private void adduser_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_adduser_btnActionPerformed
        VariablePanel.removeAll();
        VariablePanel.add(Add_userPanel);
        VariablePanel.repaint();
        VariablePanel.revalidate();
        activateUser();
    }//GEN-LAST:event_adduser_btnActionPerformed
    private void viewFile()
    {
        try {
            Connection con = DriverManager.getConnection(host, uName, uPass);
            Statement stmt = con.createStatement();
            String SQL = "SELECT * FROM USER_FILE where ID='"+loggedIn+"'";
            ResultSet rs = stmt.executeQuery(SQL);
            file_sel.removeAllItems();
            file_sel.addItem("SELECT");
            while (rs.next()) {
                    file_sel.addItem(rs.getString("FILENAME"));
            }
            con.close();

        } catch (SQLException ex) {
            Logger.getLogger(Main_Frame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    private void vw_rm_fileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_vw_rm_fileActionPerformed
        VariablePanel.removeAll();
        VariablePanel.add(vw_rmPanel);
        VariablePanel.repaint();
        VariablePanel.revalidate();
        viewFile();// TODO add your handling code here:
    }//GEN-LAST:event_vw_rm_fileActionPerformed

    private void back_btn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_back_btn1ActionPerformed
        VariablePanel.removeAll();
        VariablePanel.add(User_Country);
        VariablePanel.repaint();
        VariablePanel.revalidate();// TODO add your handling code here:
         for (int i = 0; i < CntryTable.getRowCount(); i++) {
        for (int j = 0; j < CntryTable.getColumnCount(); j++) {
            CntryTable.setValueAt("", i, j);
        }
    }
         
    }//GEN-LAST:event_back_btn1ActionPerformed

    private void back_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_back_btnActionPerformed
        VariablePanel.removeAll();
        VariablePanel.add(User_Country);
        VariablePanel.repaint();
        VariablePanel.revalidate();
        UserTable.removeAll();
         for (int i = 0; i < UserTable.getRowCount(); i++) {
        for (int j = 0; j < UserTable.getColumnCount(); j++) {
            UserTable.setValueAt("", i, j);
        }
    }
        user_sel.setSelectedIndex(0);
    }//GEN-LAST:event_back_btnActionPerformed
    /*private void view_file2()
    {
         try {
            Connection con = DriverManager.getConnection(host, uName, uPass);
            Statement stmt = con.createStatement();
            String SQL = "SELECT * FROM TOKEN_CNTRY";
            ResultSet rs = stmt.executeQuery(SQL);
            Ctry.removeAllItems();
            Ctry.addItem("SELECT");
            while (rs.next()) {
                    Ctry.addItem(rs.getString("COUNTRY"));
            }
            con.close();

        } catch (SQLException ex) {
            Logger.getLogger(Main_Frame.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }*/
    private void addcntry_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addcntry_btnActionPerformed
        finish.setEnabled(false);
        cntryName.setText("ctry");
        cntryName.setEnabled(false);
        jLabel2.setEnabled(false);
        jLabel3.setEnabled(false);
        nextList.setEnabled(false);
        finish.setEnabled(false);
        proceed.setEnabled(true);
        compliantBox.setEnabled(false);
        addLink.setEnabled(false);
        rmv.setEnabled(false);
        Ctry.setEnabled(true);
        VariablePanel.removeAll();
        VariablePanel.add(Add_cntryPanel);
        VariablePanel.repaint();
        VariablePanel.revalidate();// TODO add your handling code here:
    }//GEN-LAST:event_addcntry_btnActionPerformed

    private void backadd_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backadd_btnActionPerformed
        VariablePanel.removeAll();
        VariablePanel.add(Mng_userPanel);
        VariablePanel.repaint();
        VariablePanel.revalidate();
        viewUser();// TODO add your handling code here:
    }//GEN-LAST:event_backadd_btnActionPerformed

    private void backfile_btn2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backfile_btn2ActionPerformed
        VariablePanel.removeAll();
        VariablePanel.add(Add_removeFile);
        VariablePanel.repaint();
        VariablePanel.revalidate();// TODO add your handling code here:
        re_pass_txt.setText("");
        filename_txt.setText("");
    }//GEN-LAST:event_backfile_btn2ActionPerformed

    private void file_backActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_file_backActionPerformed
        VariablePanel.removeAll();
        VariablePanel.add(Add_removeFile);
        VariablePanel.repaint();
        VariablePanel.revalidate();
        for (int i = 0; i < FileTable.getRowCount(); i++) {
        for (int j = 0; j < FileTable.getColumnCount(); j++) {
            FileTable.setValueAt("", i, j);
        }
    }
        fileinfo_lbl.setText("Info for file");
    }//GEN-LAST:event_file_backActionPerformed

    private void logout_adminActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logout_adminActionPerformed
        VariablePanel.removeAll();
        VariablePanel.add(LoginPanel);
        VariablePanel.repaint();
        VariablePanel.revalidate();
        loggedIn="";
        loggedCtry="";
        uploadFile="";
        loggedPass="";
        username_txt.setText("username");
        password_txt.setText("password");
        
    }//GEN-LAST:event_logout_adminActionPerformed

    private void logout_usrActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logout_usrActionPerformed
        VariablePanel.removeAll();
        VariablePanel.add(LoginPanel);
        VariablePanel.repaint();
        VariablePanel.revalidate();
        loggedIn="";
        loggedCtry="";
        uploadFile="";
        loggedPass="";// TODO add your handling code here:
        username_txt.setText("username");
        password_txt.setText("password");
    }//GEN-LAST:event_logout_usrActionPerformed

    private void back_rgstrActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_back_rgstrActionPerformed
        VariablePanel.removeAll();
        VariablePanel.add(LoginPanel);
        VariablePanel.repaint();
        VariablePanel.revalidate();// TODO add your handling code here:
        name.setText("");
        email.setText("");
        password.setText("");
        cnfrm_pass.setText("");
        phone.setText("");
    }//GEN-LAST:event_back_rgstrActionPerformed

    private void back_forgotActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_back_forgotActionPerformed
        VariablePanel.removeAll();
        VariablePanel.add(LoginPanel);
        VariablePanel.repaint();
        VariablePanel.revalidate();// TODO add your handling code here:
    }//GEN-LAST:event_back_forgotActionPerformed

    private void finishActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_finishActionPerformed
        if(Ctry.getSelectedItem().toString().equals("SELECT"))
            JOptionPane.showMessageDialog(this, "PLEASE SELECT A COUNTRY");
        else
        {
            int flag=0;
        try {
            Connection con = DriverManager.getConnection(host, uName, uPass);
            Statement st=con.createStatement();
            String check="SELECT * FROM TOKEN_CNTRY";
            ResultSet rs=st.executeQuery(check);
            while(rs.next())
            {
                if(rs.getString("COUNTRY").compareTo(cntryName.getText())==0)
                {
                    flag=1;
                    break;
                }
            }
            
            Statement stmt = con.createStatement();
            String uuid=UUID.randomUUID().toString();
            if(flag==0)
            {
            String SQL = "INSERT INTO TOKEN_CNTRY values (?, ?)";
                PreparedStatement ps = con.prepareStatement(SQL);
                ps.setString(1,cntryName.getText() );
                ps.setString(2, uuid);
                ps.executeUpdate();
             SQL= "INSERT INTO TOKEN_COMPLIANTS values (?, ?)";
               PreparedStatement  ps1 = con.prepareStatement(SQL);
                ps1.setString(1,uuid );
                ps1.setString(2,nextList.getText());
                ps1.executeUpdate();
                con.close();
                JOptionPane.showMessageDialog(this, "COUNTRY ADDED");
            }
            else if(flag==1)
            {
                String SQL = "UPDATE TOKEN_COMPLIANTS SET LINK='"+nextList.getText()+"' where TOKEN='"+token+"'";
                Statement s=con.createStatement();
                s.executeUpdate(SQL);
                JOptionPane.showMessageDialog(this, "LINKS MODIFIED");
            }
        }
        catch(Exception ex){
            ex.printStackTrace();
        } 
        Ctry.setSelectedIndex(0);
        nextList.setText("");
        compliantBox.setSelectedIndex(0);
        cntryName.setText("ctry");
        VariablePanel.removeAll();
        VariablePanel.add(Mng_cntryPanel);
        Mng_cntryPanel.repaint();
        VariablePanel.revalidate();
        counter=0;// TODO add your handling code here:
        }
        
    }//GEN-LAST:event_finishActionPerformed

    private void backCtryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backCtryActionPerformed
        cntryName.setText("ctry");
        Ctry.setSelectedIndex(0);
        nextList.setText("");
        compliantBox.setSelectedIndex(0);
        nextList.setEnabled(false);
        jLabel2.setEnabled(false);
        jLabel3.setEnabled(false);
        compliantBox.setEnabled(false);
        addLink.setEnabled(false);
        rmv.setEnabled(false);
        finish.setEnabled(false);
        VariablePanel.removeAll();
        VariablePanel.add(Mng_cntryPanel);
        VariablePanel.revalidate();
        VariablePanel.repaint();
        
        // TODO add your handling code here:
    }//GEN-LAST:event_backCtryActionPerformed

    private void helpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_helpActionPerformed
        if (name_txt.getText().equals("") || email_txt.getText().equals("") || phone_txt.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "FIELDS CAN'T BE EMPTY");
        } else {
            String m = name_txt.getText();
            m = m.toUpperCase();
            String n = email_txt.getText();
            String o = phone_txt.getText();
            try {
                Connection con = DriverManager.getConnection(host, uName, uPass);
                Statement stmt = con.createStatement();
                String SQL = "SELECT * FROM CLOUDUSER WHERE ID= '" + n + "'";
                ResultSet rs = stmt.executeQuery(SQL);
                if (rs.next()) {
                    String user, phn, nam, pass;
                    user = rs.getString("ID");
                    phn = rs.getString("PHONE");
                    nam = rs.getString("NAME");
                    pass = rs.getString("PASSWORD");
                    if (m.compareTo(nam) == 0) {
                        if (o.compareTo(phn) == 0) {
                            JOptionPane.showMessageDialog(this, "USER VERIFIED. YOUR PASSWORD IS: " + pass);
                            VariablePanel.removeAll();
                            VariablePanel.add(LoginPanel);
                            VariablePanel.revalidate();
                            VariablePanel.repaint();
                        }

                    } else {
                        JOptionPane.showMessageDialog(this, "WRONG CREDENTIALS");
                    }
                } else {
                    JOptionPane.showMessageDialog(this, "WRONG CREDENTIALS");
                }
                con.close();
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(this, "USER DOES NOT EXIST");
                //Logger.getLogger(Main_Frame.class.getName()).log(Level.SEVERE, null, ex);
            }
        }// TODO add your handling code here:
    }//GEN-LAST:event_helpActionPerformed
    public static boolean isValidEmailAddress(String email) {
        boolean result = true;
        try {
            InternetAddress emailAddr = new InternetAddress(email);
            emailAddr.validate();
        } catch (AddressException ex) {
            result = false;
        }
        return result;
    }
    private void apply_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_apply_btnActionPerformed
        String n, e, p, cp, phn, ctry,role;
        n = name.getText();
        e = email.getText();
        boolean flag = false, flag2 = false;
        p = new String(password.getPassword());
        cp = new String(cnfrm_pass.getPassword());
        phn = phone.getText();
        ctry = new String(country.getSelectedItem().toString());
        role = new String(Role.getSelectedItem().toString());
        if(ctry.equals("SELECT"))
        {
            JOptionPane.showMessageDialog(this, "PLEASE SELECT A COUNTRY");
        }
        else
        {
        if (phn.matches("\\+\\d{2}\\-\\d{10}")) {
            flag = true;
        }
        boolean result;
        result = isValidEmailAddress(email.getText());
        if (result) {
            flag2 = true;
        }
        try {
            Connection con = DriverManager.getConnection(host, uName, uPass);
            Statement stmt = con.createStatement();
            String s = "SELECT * from CLOUDUSER where ID ='" + e + "'";
            ResultSet rs = stmt.executeQuery(s);
            if (rs.next()) {
                JOptionPane.showMessageDialog(this, "USER ALREADY EXISTS.");
                String temp = rs.getString("STATUS");
                if (temp.equals("INACTIVE")) {
                    JOptionPane.showMessageDialog(this, "WE'RE PUTTING YOU UP FOR ACTIVATION. PLEASE WAIT FOR ADMIN TO TAKE NECESSARY STEPS");
                    temp = rs.getString("ID");
                    s = "UPDATE CLOUDUSER SET STATUS = 'PENDING' WHERE ID=" + temp + "'";
                    stmt.executeUpdate(s);
                }
                VariablePanel.removeAll();
                VariablePanel.add(LoginPanel);
                VariablePanel.repaint();
                VariablePanel.revalidate();

            } else if (cp.compareTo(p) != 0) {
                JOptionPane.showMessageDialog(this, "ENTER CORRECT CONFIRM PASSWORD");
            } else if (flag == false) {
                JOptionPane.showMessageDialog(this, "INCORRECT PHONE NUMBER");
            } else if (ctry.equals("SEL")) {
                JOptionPane.showMessageDialog(this, "PLEASE COUNTRY OF YOUR RESIDENCE");
            } else if (flag2 == false) {
                JOptionPane.showMessageDialog(this, "INCORRECT EMAIL ADDRESS");
            } else {
                String SQL = "INSERT INTO CLOUDUSER values (?, ?, ?, ?, ?, ?, ?)";
                PreparedStatement ps = con.prepareStatement(SQL);
                ps.setString(1, e);
                ps.setString(2, n);
                ps.setString(3, p);
                ps.setString(4, ctry);
                ps.setString(5, "PENDING");
                ps.setString(6, phn);
                ps.setString(7,role);
                ps.executeUpdate();
                JOptionPane.showMessageDialog(this, "YOUR ACCOUNT HAS BEEN SUCCESSFULLY CREATED. PLEASE WAIT TILL ADMIN ACTIVATES YOU");
                VariablePanel.removeAll();
                VariablePanel.add(LoginPanel);
                VariablePanel.repaint();
                VariablePanel.revalidate();
                con.close();
            }
        
        } catch (SQLException ex) {
            Logger.getLogger(Main_Frame.class.getName()).log(Level.SEVERE, null, ex);
        }
        }
    }//GEN-LAST:event_apply_btnActionPerformed

    private void cnfrm_passKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cnfrm_passKeyTyped

    }//GEN-LAST:event_cnfrm_passKeyTyped

    private void emailKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_emailKeyTyped
        boolean result;
        result = isValidEmailAddress(email.getText());
        if (result) {
            validity.setEnabled(true);
        }
    }//GEN-LAST:event_emailKeyTyped

    private void emailKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_emailKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_BACK_SPACE) {
            validity.setEnabled(false);
        }
    }//GEN-LAST:event_emailKeyPressed

    private void cnfrm_passKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cnfrm_passKeyReleased
        String p = new String(password.getPassword());
        String cp = new String(cnfrm_pass.getPassword());
        if (cp.equals(p)) {
            passState.setEnabled(true);
        } else {
            passState.setEnabled(false);
        }
    }//GEN-LAST:event_cnfrm_passKeyReleased

    private void user_selectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_user_selectActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_user_selectActionPerformed

    private void activate_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_activate_btnActionPerformed
        String actName = new String(user_select.getSelectedItem().toString());
        //System.out.println(actName);
        try {
            Connection con = DriverManager.getConnection(host, uName, uPass);
            Statement stmt = con.createStatement();
            String SQL = "SELECT * FROM CLOUDUSER WHERE NAME='" + actName + "'";
            ResultSet rs = stmt.executeQuery(SQL);
            if (rs.next()) {
                String tempId;
                tempId = rs.getString("ID");
                SQL = "UPDATE CLOUDUSER SET STATUS = 'ACTIVE' WHERE ID='" + tempId + "'";
                stmt.executeUpdate(SQL);
                con.close();
                JOptionPane.showMessageDialog(this, "ACTIAVTED USER " + actName);
                activateUser();
            } else {
                JOptionPane.showMessageDialog(this, "NO USER TO ACTIVATE");
            }
        } catch (SQLException ex) {
            Logger.getLogger(Main_Frame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_activate_btnActionPerformed

    private void user_selActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_user_selActionPerformed
        
    }//GEN-LAST:event_user_selActionPerformed

    private void rmvuser_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rmvuser_btnActionPerformed
        if (user_sel.getSelectedItem().toString().equals("SELECT")) {
            JOptionPane.showMessageDialog(this, "NO USER TO DEACTIVATE");
        } else {
            int dialogButton = JOptionPane.YES_NO_OPTION;
            int dialogResult = JOptionPane.showConfirmDialog(null, "ARE YOU SURE YOU WANT TO "
                    + "INACTIVATE USER " + user_sel.getSelectedItem().toString(), "Warning", dialogButton);
            if (dialogResult == JOptionPane.YES_OPTION) {
                try {
                    Connection con = DriverManager.getConnection(host, uName, uPass);
                    Statement stmt = con.createStatement();
                    String SQL = "UPDATE CLOUDUSER SET STATUS='INACTIVE' WHERE NAME='" + user_sel.getSelectedItem().toString() + "'";
                    stmt.executeUpdate(SQL);

                } catch (SQLException ex) {
                    Logger.getLogger(Main_Frame.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            viewUser();
        }
    }//GEN-LAST:event_rmvuser_btnActionPerformed

    private void browse_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_browse_btnActionPerformed
        JFileChooser chooser;
        chooser = new JFileChooser();
        int answer = chooser.showOpenDialog(Main_Frame.this);
        if (answer == JFileChooser.APPROVE_OPTION) {
            
            openFile = chooser.getSelectedFile();
            filename_txt.setText(openFile.getAbsolutePath());
        }
    }//GEN-LAST:event_browse_btnActionPerformed

    private void filetype_comboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_filetype_comboActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_filetype_comboActionPerformed

    private void newfile_btn2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newfile_btn2ActionPerformed
        re_pass_txt.setText("");
        filename_txt.setText("");
        filetype_combo.setSelectedIndex(0);
    }//GEN-LAST:event_newfile_btn2ActionPerformed
    private int addFile(String file) throws FileNotFoundException, IOException {
        int flag = 0,flag1=0;
        String temptype = filetype_combo.getSelectedItem().toString();
        String p = new String(re_pass_txt.getPassword());
        String [] ext=file.split("\\.");
        System.out.println(ext[1]);
        String t=ext[1].toLowerCase();
        String image="png,bmp,jpeg";
        String audio="mp3,m4a,aac,flac,wma";
        String video="mpeg,3gp,wmv,mp4";
        String doc="doc,html,pdf";
        String stExt="."+t;
        String temp=filetype_combo.getSelectedItem().toString();
        if(t.equals("txt")||image.contains(t)||audio.contains(t)||video.contains(t)||doc.contains(t)||temp.equals("Others"))
        {
        
        if(temp.equals("TEXT")&&t.equals("txt"))
            flag1=1;
        else if(temp.equals("IMAGE")&&image.contains(t))
            flag1=1;
        else if(temp.equals("AUDIO")&&audio.contains(t))
            flag1=1;
        else if(temp.equals("VIDEO")&&video.contains(t))
            flag1=1;
        else if(temp.equals("DOCUMENT")&&doc.contains(t))
            flag1=1;
        else if(temp.equals("Others"))
            flag1=1;
        if(flag1==1)
        {
        if (p.compareTo(loggedPass) == 0) {
            try {
                Connection con = DriverManager.getConnection(host, uName, uPass);
                //Statement stmt = con.createStatement( );
                String check="SELECT * FROM CLOUDFILE";
                Statement stmt = con.createStatement();
                ResultSet rs = stmt.executeQuery(check);
                while(rs.next())
                {
                    if(uploadFile.compareTo(rs.getString("FILENAME"))==0)
                    {
                        JOptionPane.showMessageDialog(this, "FILE WITH SIMILAR NAME ALREADY EXISTS.");
                        return flag;
                    }
                }
                FileInputStream fis = new FileInputStream(openFile);
                String SQL = "INSERT INTO CLOUDFILE VALUES (?,?,?,?,?)";
                PreparedStatement ps = con.prepareStatement(SQL);
                ps.setString(1, uploadFile);
                ps.setString(2, stExt);
                ps.setString(3,loggedCtry);
                ps.setString(4,"");
                ps.setBinaryStream(5, fis, (int) openFile.length());
                ps.executeUpdate();
                SQL="INSERT INTO USER_FILE VALUES (?,?)";
                PreparedStatement ps1 = con.prepareStatement(SQL);
                ps1.setString(1,loggedIn);
                ps1.setString(2,uploadFile);
                ps1.executeUpdate();
                con.close();
                flag = 1;
                CL.instantiate();
                maxTransferTime=CL.store(loggedCtry,uploadFile,openFile.getAbsoluteFile(),openFile.getAbsolutePath());
            } catch (SQLException ex) {
                Logger.getLogger(Main_Frame.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            JOptionPane.showMessageDialog(this, "INVALID PASSWORD.");
        }
       
        }
         else
        {
             JOptionPane.showMessageDialog(this, "INVALID EXTENSION.");   
                }
        }
        else
            JOptionPane.showMessageDialog(this, "EXTENSION UNAVAILABLE. PLEASE SELECT OTHERS");
        return flag;
    }
    private void addfile_btn2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addfile_btn2ActionPerformed
        String tFile[] = filename_txt.getText().split("\\\\");
        uploadFile = loggedIn + "_" + loggedCtry + "_" + tFile[tFile.length-1];
        String fil=tFile[tFile.length-1];
        int flag = 0;
        try {
            flag = addFile(fil);
        } catch (FileNotFoundException ex) {
            Logger.getLogger(Main_Frame.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(Main_Frame.class.getName()).log(Level.SEVERE, null, ex);
        }
        if (flag == 1) {
            JOptionPane.showMessageDialog(this, "UPLOADED " + uploadFile + " in "+maxTransferTime+" seconds");
            System.out.println(maxTransferTime);
        } else {
            JOptionPane.showMessageDialog(this, "UNABLE TO UPLOAD");
        }
        addFlag=1;
    }//GEN-LAST:event_addfile_btn2ActionPerformed

    private void view_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_view_btnActionPerformed
        
        if(user_sel.getSelectedItem().toString().compareTo("SELECT")!=0)
        {
            info_lbl.setEnabled(true);
        info_lbl.setText("INFO FOR USER " + user_sel.getSelectedItem().toString());
        try {
            Connection con = DriverManager.getConnection(host, uName, uPass);
            Statement stmt = con.createStatement();
            String SQL = "SELECT * FROM CLOUDUSER where CLOUDUSER.NAME='"+user_sel.getSelectedItem().toString()+"'";
            ResultSet rs = stmt.executeQuery(SQL);
            ResultSetMetaData rsmd = rs.getMetaData();
            int columnCount = rsmd.getColumnCount();
            DefaultTableModel tm = (DefaultTableModel) UserTable.getModel();
            tm.setColumnCount(0);
            for (int i = 1; i <= columnCount; i++) {
                tm.addColumn(rsmd.getColumnName(i));
            }
            tm.setRowCount(0);
            if(rs.next()) {
                do
                {
                String[] a = new String[columnCount];
                for (int i = 0; i < columnCount; i++) {
                    a[i] = rs.getString(i + 1);
                }tm.addRow(a);
                } while(rs.next());  
                tm.fireTableDataChanged();
            }
                        
            con.close();

        } catch (SQLException ex) {
            Logger.getLogger(Main_Frame.class.getName()).log(Level.SEVERE, null, ex);
        }
        }
    }//GEN-LAST:event_view_btnActionPerformed
    private void view_file1()
    {
         try {
            Connection con = DriverManager.getConnection(host, uName, uPass);
            Statement stmt = con.createStatement();
            String SQL = "SELECT * FROM TOKEN_CNTRY";
            ResultSet rs = stmt.executeQuery(SQL);
            country_sel.removeAllItems();
            country_sel.addItem("SELECT");
            while (rs.next()) {
                    country_sel.addItem(rs.getString("COUNTRY"));
            }
            con.close();

        } catch (SQLException ex) {
            Logger.getLogger(Main_Frame.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }
    private void view_btn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_view_btn1ActionPerformed
        // TODO add your handling code here:
        if(country_sel.getSelectedItem().toString().equals("SELECT"))
            JOptionPane.showMessageDialog(this, "PLEASE SELECT A COUNTRY");
        else
        {
            info_lbl1.setEnabled(true);
            info_lbl1.setText(info_lbl1.getText()+" ");
        try
        {
            Connection con = DriverManager.getConnection(host, uName, uPass);
            Statement stmt = con.createStatement();
            String sql="SELECT * FROM TOKEN_CNTRY NATURAL JOIN TOKEN_COMPLIANTS where COUNTRY='"+country_sel.getSelectedItem().toString()+"'";
            ResultSet rs = stmt.executeQuery(sql);
            ResultSetMetaData rsmd = rs.getMetaData();
            int columnCount = rsmd.getColumnCount();
            DefaultTableModel tm = (DefaultTableModel) CntryTable.getModel();
            tm.setColumnCount(0);
            for (int i = 1; i <= columnCount; i++) {
                tm.addColumn(rsmd.getColumnName(i));
            }
            tm.setRowCount(0);

            while (rs.next()) {
                String[] a = new String[columnCount];
                for (int i = 0; i < columnCount; i++) {
                    a[i] = rs.getString(i + 1);
                }
                tm.addRow(a);
            }
            tm.fireTableDataChanged();
            //view_file1();
            con.close();
            
        }catch(Exception ex){
            ex.printStackTrace();
        }
        }
    }//GEN-LAST:event_view_btn1ActionPerformed

    private void rmvcntry_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rmvcntry_btnActionPerformed
        // TODO add your handling code here:
        String token="";
        if (country_sel.getSelectedItem().toString().equals("SELECT")) {
            JOptionPane.showMessageDialog(this, "NO COUNTRY TO REMOVE");
        } else {
            int dialogButton = JOptionPane.YES_NO_OPTION;
            int dialogResult = JOptionPane.showConfirmDialog(null, "ARE YOU SURE YOU WANT TO "
                    + "DELETE COUNTRY? ALL FILES WILL BE SET TO NULL COUNTRY? " + country_sel.getSelectedItem().toString(), "Warning", dialogButton);
            if (dialogResult == JOptionPane.YES_OPTION) {
                try {
                    Connection con = DriverManager.getConnection(host, uName, uPass);
                    Statement stmt = con.createStatement();
                    String SQL="SELECT TOKEN FROM TOKEN_CNTRY WHERE COUNTRY='" + country_sel.getSelectedItem().toString() + "'";
                    ResultSet rs=stmt.executeQuery(SQL);
                    if (rs.next()) {
                    
                    token = rs.getString("TOKEN");
                    }
                     SQL = "DELETE FROM TOKEN_CNTRY WHERE COUNTRY='" + country_sel.getSelectedItem().toString() + "'";
                    stmt.executeUpdate(SQL);
                    SQL = "DELETE FROM TOKEN_COMPLIANTS WHERE TOKEN='" + token + "'";
                    stmt.executeUpdate(SQL);
                    SQL = "UPDATE CLOUDFILE SET COUNTRY ='NULL' where COUNTRY='" + country_sel.getSelectedItem().toString() + "'";
                    stmt.executeUpdate(SQL);
                    SQL = "UPDATE CLOUDFILE SET REPLICATE ='NULL' where REPLICATE='" + country_sel.getSelectedItem().toString() + "'";
                    stmt.executeUpdate(SQL);
                    DefaultTableModel tm = (DefaultTableModel) CntryTable.getModel();
                    tm.setColumnCount(0);
                    tm.fireTableDataChanged();
                    JOptionPane.showMessageDialog(this, "COUNTRY REMOVED");
                } catch (SQLException ex) {
                    Logger.getLogger(Main_Frame.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            view_file1();
        }
    }//GEN-LAST:event_rmvcntry_btnActionPerformed

    private void file_viewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_file_viewActionPerformed
        fileinfo_lbl.setEnabled(true);
        fileinfo_lbl.setText("INFO FOR FILE " +file_sel.getSelectedItem().toString());
        try {
            Connection con = DriverManager.getConnection(host, uName, uPass);
            Statement stmt = con.createStatement();
            String SQL = "SELECT * FROM CLOUDFILE NATURAL JOIN USER_FILE where CLOUDFILE.FILENAME='"+file_sel.getSelectedItem().toString()+"'";
            ResultSet rs = stmt.executeQuery(SQL);
            ResultSetMetaData rsmd = rs.getMetaData();
            int columnCount = rsmd.getColumnCount();
            DefaultTableModel tm = (DefaultTableModel) FileTable.getModel();
            tm.setColumnCount(0);
            for (int i = 1; i <= columnCount; i++) {
                tm.addColumn(rsmd.getColumnName(i));
            }
            tm.setRowCount(0);

            while (rs.next()) {
                String[] a = new String[columnCount];
                for (int i = 0; i < columnCount; i++) {
                    a[i] = rs.getString(i + 1);
                }
                tm.addRow(a);
            }
            tm.fireTableDataChanged();
            
            con.close();

        } catch (SQLException ex) {
            Logger.getLogger(Main_Frame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_file_viewActionPerformed

    private void rmfile_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rmfile_btnActionPerformed
        if (file_sel.getSelectedItem().toString().equals("SELECT")) {
            JOptionPane.showMessageDialog(this, "NO FILE TO REMOVE");
        } else {
            int dialogButton = JOptionPane.YES_NO_OPTION;
            int dialogResult = JOptionPane.showConfirmDialog(null, "ARE YOU SURE YOU WANT TO "
                    + "DELETE FILE " + file_sel.getSelectedItem().toString(), "Warning", dialogButton);
            if (dialogResult == JOptionPane.YES_OPTION) {
                double result=CL.remove(file_sel.getSelectedItem().toString(),openFile.getAbsoluteFile());
                JOptionPane.showMessageDialog(this, "REMOVED " + file_sel.getSelectedItem().toString() + " in "+result+" seconds");
                System.out.println(result);
                DefaultTableModel tm = (DefaultTableModel) FileTable.getModel();
                tm.setColumnCount(0);
                tm.fireTableDataChanged();
            }
            viewFile();
        }
    }//GEN-LAST:event_rmfile_btnActionPerformed

    private void countryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_countryActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_countryActionPerformed
    /*private void view_file3()
    {
         try {
            Connection con = DriverManager.getConnection(host, uName, uPass);
            Statement stmt = con.createStatement();
            String SQL = "SELECT * FROM TOKEN_CNTRY";
            ResultSet rs = stmt.executeQuery(SQL);
            compliantBox.removeAllItems();
            //compliantBox.addItem("SELECT");
            while (rs.next()) {
                    compliantBox.addItem(rs.getString("COUNTRY"));
            }
            con.close();

        } catch (SQLException ex) {
            Logger.getLogger(Main_Frame.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }*/
    private void proceedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_proceedActionPerformed
        // TODO add your handling code here:
        //view_file3();
        String cnt=Ctry.getSelectedItem().toString();
        if(cnt.equals("SELECT"))
        {
            JOptionPane.showMessageDialog(this, "PLEASE SELECT A COUNTRY");
        }
        else
        {
         int k=Ctry.getSelectedIndex();
        finish.setEnabled(true);
        cntryName.setText(cnt);
        cntryName.setEnabled(false);
        jLabel2.setEnabled(true);
        jLabel3.setEnabled(true);
        nextList.setEnabled(true);
        finish.setEnabled(true);
        proceed.setEnabled(false);
        compliantBox.setEnabled(true);
        Ctry.setEnabled(false);
        //cnt=" ";
        //String k=Ctry.getSelectedItem().toString();
        //String cntry;
        
        //CompliantBox.removeItem(k);
        addLink.setEnabled(true);
        rmv.setEnabled(true);
        try{
               Connection con = DriverManager.getConnection(host, uName, uPass);
                    Statement stmt = con.createStatement();
                    String SQL="SELECT * FROM TOKEN_CNTRY where COUNTRY='"+cnt+"'";
                    ResultSet rs=stmt.executeQuery(SQL);
                    if (rs.next()) {                  
                    counter=1;
                    token=rs.getString("TOKEN");
                    }
                    else
                    {
                        counter=0;    
                        nextList.setText("");
                        Compliantcountries="";
                         }
                    if(counter==1)
                    {
                          SQL="SELECT LINK FROM TOKEN_COMPLIANTS WHERE TOKEN='"+token+"'";
                         rs=stmt.executeQuery(SQL);
                         if(rs.next()){
                             link=rs.getString("LINK");
                             nextList.setText(link);
                    }
                         
                         
                    }
        }catch(Exception ex){
            ex.printStackTrace();
        }
            
        }
        
    }//GEN-LAST:event_proceedActionPerformed

    private void file_selActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_file_selActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_file_selActionPerformed
    private void addcountrylinks(){
        String cnts=compliantBox.getSelectedItem().toString();
        if(nextList.getText().contains(cnts))
        {
           //do nothing
        }
        else
        {
        if(counter==0)
        {
            Compliantcountries=Compliantcountries+cnts+",";
            nextList.setText(Compliantcountries);
        }
        else {
            link=link+cnts+",";
            nextList.setText(link);
            
        }
        }
    }
    private void addLinkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addLinkActionPerformed
        
        addcountrylinks(); 
        
    }//GEN-LAST:event_addLinkActionPerformed
    
    private void CtryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CtryActionPerformed
        // TODO add your handling code here:
        view_file1();
    }//GEN-LAST:event_CtryActionPerformed
    private String removestrings()
    {
        String remainder = "";
        String cnts=compliantBox.getSelectedItem().toString();
        if(nextList.getText().contains(cnts)== false)
        {
           //do nothing
        }       
        else
        {
            if(counter==0)
            {
            StringTokenizer st = new StringTokenizer(Compliantcountries);
           //remainder = "";
            System.out.println(Compliantcountries);
            String unwanted;
            unwanted=cnts;
            unwanted=unwanted+",";
            System.out.println(unwanted);
            Compliantcountries=Compliantcountries.replace(unwanted, "");
            return Compliantcountries;
            }
            else
            {
                StringTokenizer st = new StringTokenizer(link);
                remainder="";
                String unwanted;
                unwanted=cnts;
                unwanted=unwanted+",";
                link=link.replace(unwanted,"");
                return link;
            }
        }
        return Compliantcountries;
    }
    private void country_selActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_country_selActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_country_selActionPerformed
    private void viewFiletrnsfr()
    {
        try {
            Connection con = DriverManager.getConnection(host, uName, uPass);
            Statement stmt = con.createStatement();
            String SQL = "SELECT * FROM USER_FILE";
            ResultSet rs = stmt.executeQuery(SQL);
            file_sel1.removeAllItems();
            file_sel1.addItem("SELECT");
            while (rs.next()) {
                    file_sel1.addItem(rs.getString("FILENAME"));
            }
            con.close();

        } catch (SQLException ex) {
            Logger.getLogger(Main_Frame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    private void transfer_adminActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_transfer_adminActionPerformed
        VariablePanel.removeAll();
        VariablePanel.add(File_trnsfrPanel);
        VariablePanel.repaint();
        VariablePanel.revalidate();
        viewFiletrnsfr();
    }//GEN-LAST:event_transfer_adminActionPerformed
    private int setVal(String cntry)
    {
        int flag=0;
        try {
            Connection con = DriverManager.getConnection(host, uName, uPass);
            Statement stmt = con.createStatement();
            System.out.println(cntry);
            String SQL = "SELECT * from TOKEN_COMPLIANTS, TOKEN_CNTRY where TOKEN_COMPLIANTS.TOKEN=TOKEN_CNTRY.TOKEN and TOKEN_CNTRY.COUNTRY='"+cntry+"'";
            ResultSet rs = stmt.executeQuery(SQL);
            if(rs.next())
            {
                String part[]=rs.getString("LINK").split(",");
                if(part.length>=2)
                {
                    flag=1;
                    mainCombo.removeAllItems();
                    repliCombo.removeAllItems();
                    for(String i:part){
                        mainCombo.addItem(i);
                        repliCombo.addItem(i);
                    }
                }
            }
            con.close();

        } catch (SQLException ex) {
            Logger.getLogger(Main_Frame.class.getName()).log(Level.SEVERE, null, ex);
        }
        return flag;
    }
    
    private void trnsfrActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_trnsfrActionPerformed
        
        int ret=0;
        String nam="";
        String mainCtry="",repli="";
        String m,n;
        if(file_sel1.getSelectedItem().toString().equals("SELECT"))
            JOptionPane.showMessageDialog(this, "PLEASE SELECT A FILE");
        
        else
        {
        try {
            Connection con = DriverManager.getConnection(host, uName, uPass);
            Statement stmt = con.createStatement();
            String SQL = "SELECT * FROM USER_FILE WHERE FILENAME='"+file_sel1.getSelectedItem().toString()+"'";
            ResultSet rs = stmt.executeQuery(SQL);
            if(rs.next()){
                nam=rs.getString("ID");
                SQL="SELECT * FROM CLOUDUSER WHERE ID='"+nam+"'";
                Statement st=con.createStatement();
                ResultSet rs1=st.executeQuery(SQL);
                if(rs1.next())
                    ret=setVal(rs1.getString("COUNTRY"));
                }
            con.close();

        } catch (SQLException ex) {
            Logger.getLogger(Main_Frame.class.getName()).log(Level.SEVERE, null, ex);
        }
        
            if(ret==1)
            {
                int option = JOptionPane.showConfirmDialog(null, transferPanel, "FILE TRANSFER", JOptionPane.OK_CANCEL_OPTION);
                if (option == JOptionPane.OK_OPTION) {
                    try {
                        Connection con = DriverManager.getConnection(host, uName, uPass);
                        Statement stmt = con.createStatement();
                        String SQL = "SELECT * FROM CLOUDFILE";
                        ResultSet rs=stmt.executeQuery(SQL);
                        if(rs.next())
                        {
                            mainCtry=rs.getString("COUNTRY");
                            repli=rs.getString("REPLICATE");
                        }
                         m=mainCombo.getSelectedItem().toString();
                         n=repliCombo.getSelectedItem().toString();
                        Statement st = con.createStatement();     
                        SQL="UPDATE CLOUDFILE SET COUNTRY='"+m+"' ,REPLICATE='"+n
                        +"' where FILENAME='"+file_sel.getSelectedItem().toString()+"'";
                        st.executeUpdate(SQL);
                            
                        if(m.compareTo(mainCtry)!=0){
                                Statement stmt1 = con.createStatement();
                                SQL="INSERT INTO "+m+ " SELECT * FROM "+mainCtry+" WHERE NOT EXISTS (SELECT * FROM "+m+" where "+m+".FILENAME="+mainCtry
                                    +".FILENAME and "+m+".FILENAME='"+file_sel.getSelectedItem().toString()+"')";
                                stmt1.executeUpdate(SQL);
                                Statement st1 = con.createStatement(); 
                                SQL="DELETE FROM "+mainCtry+" where FILENAME='"+file_sel.getSelectedItem().toString()+"'";
                                st1.executeUpdate(SQL);
                            }
                            if(n.compareTo(repli)!=0){
                                Statement stmt2 = con.createStatement();
                                SQL="INSERT INTO "+n+ " SELECT * FROM "+repli+" WHERE NOT EXISTS (SELECT * FROM "+n+" where "+n+".FILENAME="+repli
                                    +".FILENAME and "+n+".FILENAME='"+file_sel.getSelectedItem().toString()+"')";
                                stmt2.executeUpdate(SQL);
                                Statement st2 = con.createStatement();     
                                SQL="DELETE FROM "+repli+" where FILENAME='"+file_sel.getSelectedItem().toString()+"'";
                                st2.executeUpdate(SQL);
                            }
                            JOptionPane.showMessageDialog(this, "FILE TRANSFER SUCCESSFUL");
                            DefaultTableModel tm = (DefaultTableModel) FileTable.getModel();
                            tm.setColumnCount(0);
                            tm.fireTableDataChanged();
                        
                    }catch (SQLException ex) {
                        Logger.getLogger(Main_Frame.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
            else
            {
                JOptionPane.showMessageDialog(this, "TRANSFER NOT POSSIBLE, ADD NEW FILES BEFORE TRANSFERRING");
            }
            }
        }
    }//GEN-LAST:event_trnsfrActionPerformed
    
    private void backadd_btn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backadd_btn1ActionPerformed
        VariablePanel.removeAll();
        VariablePanel.add(User_Country);
        VariablePanel.repaint();
        VariablePanel.revalidate();
    }//GEN-LAST:event_backadd_btn1ActionPerformed

    private void file_sel1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_file_sel1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_file_sel1ActionPerformed

    private void view_fileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_view_fileActionPerformed
        try {
            Connection con = DriverManager.getConnection(host, uName, uPass);
            Statement stmt = con.createStatement();
            String SQL = "SELECT * FROM CLOUDFILE WHERE FILENAME='"+file_sel1.getSelectedItem().toString()+"'";
            ResultSet rs = stmt.executeQuery(SQL);
            ResultSetMetaData rsmd = rs.getMetaData();
            int columnCount = rsmd.getColumnCount();
            DefaultTableModel tm = (DefaultTableModel) fileTrnsfr.getModel();
            tm.setColumnCount(0);
            for (int i = 1; i <= columnCount; i++) {
                tm.addColumn(rsmd.getColumnName(i));
            }
            tm.setRowCount(0);

            while (rs.next()) {
                String[] a = new String[columnCount];
                for (int i = 0; i < columnCount; i++) {
                    a[i] = rs.getString(i + 1);
                }
                tm.addRow(a);
            }
            tm.fireTableDataChanged();
            
            con.close();

        } catch (SQLException ex) {
            Logger.getLogger(Main_Frame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_view_fileActionPerformed

   
    private void transferActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_transferActionPerformed
       int ret=0;
        String mainCtry="",repli="";
        String m,n;
        
        if(file_sel.getSelectedItem().toString().equals("SELECT"))
        JOptionPane.showMessageDialog(this, "PLEASE SELECT A FILE");

        else
        {
            ret=setVal(loggedCtry);
            System.out.println(ret);
            if(ret==1&&addFlag==1)
            {
                int option = JOptionPane.showConfirmDialog(null, transferPanel, "FILE TRANSFER", JOptionPane.OK_CANCEL_OPTION);
                if (option == JOptionPane.OK_OPTION) {
                    
                    try {
                        Connection con = DriverManager.getConnection(host, uName, uPass);
                        Statement stmt = con.createStatement();
                        String SQL = "SELECT * FROM CLOUDFILE";
                        ResultSet rs=stmt.executeQuery(SQL);
                        if(rs.next())
                        {
                            mainCtry=rs.getString("COUNTRY");
                            repli=rs.getString("REPLICATE");
                        }
                         m=mainCombo.getSelectedItem().toString();
                         n=repliCombo.getSelectedItem().toString();
                        Statement st = con.createStatement();
                        SQL="UPDATE CLOUDFILE SET COUNTRY='"+m+"' ,REPLICATE='"+n
                        +"' where FILENAME='"+file_sel.getSelectedItem().toString()+"'";
                        st.executeUpdate(SQL);
                        
                        if(m.equals(mainCtry)||n.equals(repli)||(m.equals(repli)&&n.equals(mainCtry)))
                        {
                            JOptionPane.showMessageDialog(this, "FILE TRANSFER SUCCESSFUL");
                        }
                        else if(m.equals(n))
                        {
                            JOptionPane.showMessageDialog(this, "CAN'T STORE AND REPLICATE IN SAME COUNTRY");
                        }
                        else
                        {
                            double result=CL.transfer(file_sel.getSelectedItem().toString(), mainCtry,repli,m,n,openFile.getAbsoluteFile(),openFile.getAbsolutePath());
                            JOptionPane.showMessageDialog(this, "TRANSFERRED " + file_sel.getSelectedItem().toString() + " in "+result+" seconds");
                            System.out.println(result);
                        }
                    }catch (SQLException ex) {
                        Logger.getLogger(Main_Frame.class.getName()).log(Level.SEVERE, null, ex);
                    }

                }
            }
            else
            {
                JOptionPane.showMessageDialog(this, "TRANSFER NOT POSSIBLE");
            }
        }
       
    }//GEN-LAST:event_transferActionPerformed

    private void mainComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mainComboActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_mainComboActionPerformed

    private void rmvActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rmvActionPerformed
        // TODO add your handling code here:
        Compliantcountries=removestrings();
        nextList.setText(Compliantcountries);
    }//GEN-LAST:event_rmvActionPerformed

    private void RoleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RoleActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_RoleActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Main_Frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Main_Frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Main_Frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Main_Frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Main_Frame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel Add_FilePanel;
    private javax.swing.JPanel Add_cntryPanel;
    private javax.swing.JPanel Add_removeFile;
    private javax.swing.JPanel Add_userPanel;
    private javax.swing.JPanel AdminPanel;
    private javax.swing.JScrollPane CntryInfoTable;
    private javax.swing.JTable CntryTable;
    private javax.swing.JPanel ConstantPanel;
    private javax.swing.JComboBox Ctry;
    private javax.swing.JScrollPane FileInfoTable;
    private javax.swing.JTable FileTable;
    private javax.swing.JScrollPane FileTrnsfrTable;
    private javax.swing.JPanel File_trnsfrPanel;
    private javax.swing.JPanel ForgotPanel;
    private javax.swing.JPanel LoginPanel;
    private javax.swing.JPanel Mng_cntryPanel;
    private javax.swing.JPanel Mng_userPanel;
    private javax.swing.JPanel ParentPanel;
    private javax.swing.JPanel RegisterPanel;
    private javax.swing.JComboBox Role;
    private javax.swing.JScrollPane UserInfoTable;
    private javax.swing.JPanel UserPanel;
    private javax.swing.JTable UserStatus;
    private javax.swing.JScrollPane UserStatusTable;
    private javax.swing.JTable UserTable;
    private javax.swing.JPanel User_Country;
    private javax.swing.JPanel VariablePanel;
    private javax.swing.JButton activate_btn;
    private javax.swing.JButton addLink;
    private javax.swing.JButton add_file;
    private javax.swing.JButton addcntry_btn;
    private javax.swing.JButton addfile_btn2;
    private javax.swing.JButton adduser_btn;
    private javax.swing.JButton apply_btn;
    private javax.swing.JButton backCtry;
    private javax.swing.JButton back_btn;
    private javax.swing.JButton back_btn1;
    private javax.swing.JButton back_forgot;
    private javax.swing.JButton back_rgstr;
    private javax.swing.JButton backadd_btn;
    private javax.swing.JButton backadd_btn1;
    private javax.swing.JButton backfile_btn2;
    private javax.swing.JButton browse_btn;
    private javax.swing.JPasswordField cnfrm_pass;
    private javax.swing.JLabel cntryName;
    private javax.swing.JComboBox compliantBox;
    private javax.swing.JComboBox country;
    private javax.swing.JComboBox country_sel;
    private javax.swing.JButton downloadfile_btn;
    private javax.swing.JTextField email;
    private javax.swing.JTextField email_txt;
    private javax.swing.JTable fileTrnsfr;
    private javax.swing.JButton file_back;
    private javax.swing.JComboBox file_sel;
    private javax.swing.JComboBox file_sel1;
    private javax.swing.JButton file_view;
    private javax.swing.JLabel fileinfo_lbl;
    private javax.swing.JTextField filename_txt;
    private javax.swing.JComboBox filetype_combo;
    private javax.swing.JButton finish;
    private javax.swing.JLabel forgot_lbl;
    private javax.swing.JButton help;
    private javax.swing.JLabel info_lbl;
    private javax.swing.JLabel info_lbl1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JButton login_btn;
    private javax.swing.JButton logout_admin;
    private javax.swing.JButton logout_usr;
    private javax.swing.JComboBox mainCombo;
    private javax.swing.JButton mng_cntry;
    private javax.swing.JButton mng_user;
    private javax.swing.JTextField name;
    private javax.swing.JTextField name_txt;
    private javax.swing.JButton newfile_btn2;
    private javax.swing.JTextField nextList;
    private javax.swing.JLabel passState;
    private javax.swing.JPasswordField password;
    private javax.swing.JPasswordField password_txt;
    private javax.swing.JTextField phone;
    private javax.swing.JTextField phone_txt;
    private javax.swing.JButton proceed;
    private javax.swing.JPasswordField re_pass_txt;
    private javax.swing.JButton register_btn;
    private javax.swing.JComboBox repliCombo;
    private javax.swing.JButton reset_btn;
    private javax.swing.JButton rmfile_btn;
    private javax.swing.JButton rmv;
    private javax.swing.JButton rmvcntry_btn;
    private javax.swing.JButton rmvuser_btn;
    private javax.swing.JButton transfer;
    private javax.swing.JPanel transferPanel;
    private javax.swing.JButton transfer_admin;
    private javax.swing.JButton trnsfr;
    private javax.swing.JComboBox user_sel;
    private javax.swing.JComboBox user_select;
    private javax.swing.JTextField username_txt;
    private javax.swing.JLabel validity;
    private javax.swing.JButton view_btn;
    private javax.swing.JButton view_btn1;
    private javax.swing.JButton view_file;
    private javax.swing.JPanel vw_rmPanel;
    private javax.swing.JButton vw_rm_file;
    // End of variables declaration//GEN-END:variables
}
